<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\out_DA14531\Objects\ble_app_peripheral_531.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\out_DA14531\Objects\ble_app_peripheral_531.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Tue Nov 22 10:36:25 2022
<BR><P>
<H3>Maximum Stack Usage =        440 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
gapc_cmp_evt_handler &rArr; user_catch_rest_hndl &rArr; user_svc1_led_wr_ind_handler &rArr; send &rArr; aes_operation &rArr; aes_part &rArr; aes_enc_dec &rArr; AES_decrypt
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[5]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">SysTick_Handler</a><BR>
 <LI><a href="#[e]">BLE_RF_DIAG_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[e]">BLE_RF_DIAG_Handler</a><BR>
 <LI><a href="#[155]">uart_write_byte</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[155]">uart_write_byte</a><BR>
 <LI><a href="#[d1]">uart_wait_tx_finish</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d1]">uart_wait_tx_finish</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[c]">ADC_Handler</a> from adc_531.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[e]">BLE_RF_DIAG_Handler</a> from startup_da14531.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[6]">BLE_WAKEUP_LP_Handler</a> from rwble.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[19]">DMA_Handler</a> from startup_da14531.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[10]">GPIO0_Handler</a> from gpio.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[11]">GPIO1_Handler</a> from gpio.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[12]">GPIO2_Handler</a> from gpio.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[13]">GPIO3_Handler</a> from gpio.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[14]">GPIO4_Handler</a> from gpio.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_da14531.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[22]">HardFault_HandlerC</a> from hardfault_handler.o(.text) referenced from startup_da14531.o(.text)
 <LI><a href="#[a]">I2C_Handler</a> from i2c.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[71]">JT_l2cc_pdu_recv_ind_handler_func</a> from patch.o(.text) referenced from jump_table.o(.constdata)
 <LI><a href="#[6e]">JT_l2cc_pdu_unpack_func</a> from patch.o(.text) referenced from jump_table.o(.constdata)
 <LI><a href="#[7b]">JT_llc_le_length_effective_func</a> from patch.o(.text) referenced from jump_table.o(.constdata)
 <LI><a href="#[61]">JT_lld_test_mode_rx_func</a> from patch.o(.text) referenced from jump_table.o(.constdata)
 <LI><a href="#[d]">KEYBRD_Handler</a> from startup_da14531.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_da14531.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[21]">NMI_HandlerC</a> from nmi_handler.o(.text) referenced from startup_da14531.o(.text)
 <LI><a href="#[87]">PATCHED_llc_data_ind_handler</a> from patch.o(.text) referenced from arch_rom.o(.constdata)
 <LI><a href="#[88]">PATCHED_llcp_length_req_handler</a> from patch.o(.text) referenced from arch_rom.o(.constdata)
 <LI><a href="#[89]">PATCHED_llcp_length_rsp_handler</a> from patch.o(.text) referenced from arch_rom.o(.constdata)
 <LI><a href="#[8a]">PATCHED_lld_data_ind_handler</a> from patch.o(.text) referenced from arch_rom.o(.constdata)
 <LI><a href="#[c3]">PATCHED_llm_con_req_ind</a> from patch.o(.text) referenced from patch.o(.constdata)
 <LI><a href="#[c4]">PATCHED_smpc_recv_pair_rand_pdu</a> from patch.o(.text) referenced from patch.o(.constdata)
 <LI><a href="#[c5]">PATCHED_smpc_recv_public_key_exchange_pdu</a> from patch.o(.text) referenced from patch.o(.constdata)
 <LI><a href="#[77]">PK_PointMult_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_da14531.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[28]">RADIOCNTL_Handler</a> from ble_arp.o(.text) referenced from ble_arp.o(.text)
 <LI><a href="#[1b]">RESERVED21_Handler</a> from startup_da14531.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[1c]">RESERVED22_Handler</a> from startup_da14531.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[1d]">RESERVED23_Handler</a> from startup_da14531.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[f]">RFCAL_Handler</a> from startup_da14531.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[18]">RTC_Handler</a> from startup_da14531.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_da14531.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[b]">SPI_Handler</a> from startup_da14531.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_da14531.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[17]">SWTIM1_Handler</a> from startup_da14531.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[15]">SWTIM_Handler</a> from startup_da14531.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from startup_da14531.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[1f]">SystemInit</a> from system_da14531.o(.text) referenced from startup_da14531.o(.text)
 <LI><a href="#[9]">UART2_Handler</a> from uart.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[8]">UART_Handler</a> from da14531_symbols.txt(ABSOLUTE) referenced from startup_da14531.o(RESET)
 <LI><a href="#[42]">UART_Handler_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[16]">WKUP_QUADEC_Handler</a> from wkupct_quadec.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[1a]">XTAL32M_RDY_Handler</a> from startup_da14531.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[20]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_da14531.o(.text)
 <LI><a href="#[34]">adv_data_update_timer_cb</a> from user_peripheral.o(.text) referenced from user_peripheral.o(.text)
 <LI><a href="#[c1]">aes_cmp_evt_handler</a> from aes_task.o(.text) referenced from aes_task.o(.constdata)
 <LI><a href="#[c0]">aes_use_enc_block_cmd_handler</a> from aes_task.o(.text) referenced from aes_task.o(.constdata)
 <LI><a href="#[c2]">app_custs1_create_db</a> from app_customs.o(.text) referenced from user_custs_config.o(.constdata)
 <LI><a href="#[bc]">app_custs1_process_handler</a> from app_customs_task.o(.text) referenced from app_entry_point.o(.constdata)
 <LI><a href="#[be]">app_db_init_next</a> from app.o(.text) referenced from app_entry_point.o(.constdata)
 <LI><a href="#[98]">app_diss_create_db</a> from app_diss.o(.text) referenced from app.o(.constdata)
 <LI><a href="#[ba]">app_diss_process_handler</a> from app_diss_task.o(.text) referenced from app_entry_point.o(.constdata)
 <LI><a href="#[bd]">app_easy_gap_dev_configure</a> from app.o(.text) referenced from app_entry_point.o(.constdata)
 <LI><a href="#[b7]">app_gap_process_handler</a> from app_task.o(.text) referenced from app_entry_point.o(.constdata)
 <LI><a href="#[b9]">app_msg_utils_api_process_handler</a> from app_easy_msg_utils.o(.text) referenced from app_entry_point.o(.constdata)
 <LI><a href="#[99]">app_suotar_create_db</a> from app_suotar.o(.text) referenced from app.o(.constdata)
 <LI><a href="#[bb]">app_suotar_process_handler</a> from app_suotar_task.o(.text) referenced from app_entry_point.o(.constdata)
 <LI><a href="#[b8]">app_timer_api_process_handler</a> from app_easy_timer.o(.text) referenced from app_entry_point.o(.constdata)
 <LI><a href="#[39]">arch_force_active_mode</a> from arch_sleep.o(.text) referenced from arch_console.o(.constdata)
 <LI><a href="#[38]">arch_restore_sleep_mode</a> from arch_sleep.o(.text) referenced from arch_console.o(.constdata)
 <LI><a href="#[74]">attc_l2cc_pdu_recv_handler_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[73]">atts_l2cc_pdu_recv_handler_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[82]">ba431_get_rand_func</a> from jump_table.o(.text) referenced from jump_table.o(.constdata)
 <LI><a href="#[86]">ble_init_arp_func</a> from ble_arp.o(.text) referenced from jump_table.o(.constdata)
 <LI><a href="#[75]">crypto_init_func</a> from jump_table.o(.text) referenced from jump_table.o(.constdata)
 <LI><a href="#[93]">custs1_att_info_rsp_handler</a> from da14531_symbols.txt(ABSOLUTE) referenced from custs1_task.o(.constdata)
 <LI><a href="#[97]">custs1_prf_itf_get</a> from da14531_symbols.txt(ABSOLUTE) referenced from prf.o(.constdata)
 <LI><a href="#[92]">custs1_val_ind_req_handler</a> from da14531_symbols.txt(ABSOLUTE) referenced from custs1_task.o(.constdata)
 <LI><a href="#[90]">custs1_val_ntf_req_handler</a> from da14531_symbols.txt(ABSOLUTE) referenced from custs1_task.o(.constdata)
 <LI><a href="#[91]">custs1_val_set_req_handler</a> from da14531_symbols.txt(ABSOLUTE) referenced from custs1_task.o(.constdata)
 <LI><a href="#[94]">custs1_value_req_rsp_handler</a> from da14531_symbols.txt(ABSOLUTE) referenced from custs1_task.o(.constdata)
 <LI><a href="#[8b]">custs_get_func_callbacks</a> from app_customs.o(.text) referenced from custs1.o(.constdata)
 <LI><a href="#[6a]">dbg_init_func_empty</a> from jump_table.o(.text) referenced from jump_table.o(.constdata)
 <LI><a href="#[6b]">dbg_platform_reset_complete_func_empty</a> from jump_table.o(.text) referenced from jump_table.o(.constdata)
 <LI><a href="#[b6]">default_app_generate_static_random_addr</a> from app_default_handlers.o(.text) referenced from app_entry_point.o(.constdata)
 <LI><a href="#[b2]">default_app_on_get_dev_appearance</a> from app_default_handlers.o(.text) referenced from app_entry_point.o(.constdata)
 <LI><a href="#[b1]">default_app_on_get_dev_name</a> from app_default_handlers.o(.text) referenced from app_entry_point.o(.constdata)
 <LI><a href="#[b3]">default_app_on_get_dev_slv_pref_params</a> from app_default_handlers.o(.text) referenced from app_entry_point.o(.constdata)
 <LI><a href="#[ae]">default_app_on_set_dev_config_complete</a> from app_default_handlers.o(.text) referenced from app_entry_point.o(.constdata)
 <LI><a href="#[b4]">default_app_on_set_dev_info</a> from app_default_handlers.o(.text) referenced from app_entry_point.o(.constdata)
 <LI><a href="#[b5]">default_app_update_params_request</a> from app_default_handlers.o(.text) referenced from app_entry_point.o(.constdata)
 <LI><a href="#[80]">dia_rand_func</a> from jump_table.o(.text) referenced from jump_table.o(.constdata)
 <LI><a href="#[81]">dia_srand_func</a> from jump_table.o(.text) referenced from jump_table.o(.constdata)
 <LI><a href="#[95]">diss_prf_itf_get</a> from da14531_symbols.txt(ABSOLUTE) referenced from prf.o(.constdata)
 <LI><a href="#[a7]">diss_value_req_ind_handler</a> from app_diss_task.o(.text) referenced from app_diss_task.o(.constdata)
 <LI><a href="#[9c]">gapc_cmp_evt_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[9d]">gapc_connection_req_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[9e]">gapc_disconnect_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[9f]">gapc_get_dev_info_req_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[a4]">gapc_le_pkt_size_ind_handler_ROM</a> from da14531_symbols.txt(ABSOLUTE) referenced from app_task.o(.constdata)
 <LI><a href="#[72]">gapc_lecb_connect_cfm_handler_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[a3]">gapc_param_update_req_ind_handler_ROM</a> from da14531_symbols.txt(ABSOLUTE) referenced from app_task.o(.constdata)
 <LI><a href="#[a6]">gapc_peer_features_ind_handler_ROM</a> from da14531_symbols.txt(ABSOLUTE) referenced from app_task.o(.constdata)
 <LI><a href="#[a0]">gapc_set_dev_info_req_ind_handler_ROM</a> from da14531_symbols.txt(ABSOLUTE) referenced from app_task.o(.constdata)
 <LI><a href="#[a2]">gapm_adv_report_ind_handler_ROM</a> from da14531_symbols.txt(ABSOLUTE) referenced from app_task.o(.constdata)
 <LI><a href="#[9b]">gapm_cmp_evt_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[9a]">gapm_device_ready_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[a1]">gapm_profile_added_ind_handler_ROM</a> from da14531_symbols.txt(ABSOLUTE) referenced from app_task.o(.constdata)
 <LI><a href="#[8e]">gattc_att_info_req_ind_handler</a> from da14531_symbols.txt(ABSOLUTE) referenced from custs1_task.o(.constdata)
 <LI><a href="#[8f]">gattc_cmp_evt_handler</a> from da14531_symbols.txt(ABSOLUTE) referenced from custs1_task.o(.constdata)
 <LI><a href="#[8c]">gattc_read_req_ind_handler</a> from da14531_symbols.txt(ABSOLUTE) referenced from custs1_task.o(.constdata)
 <LI><a href="#[a5]">gattc_svc_changed_cfg_ind_handler_ROM</a> from da14531_symbols.txt(ABSOLUTE) referenced from app_task.o(.constdata)
 <LI><a href="#[8d]">gattc_write_req_ind_handler</a> from custs1_task.o(.text) referenced from custs1_task.o(.constdata)
 <LI><a href="#[44]">gtl_eif_init_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[46]">gtl_eif_read_hdr_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[47]">gtl_eif_read_payl_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[45]">gtl_eif_read_start_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[49]">gtl_eif_rx_done_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[48]">gtl_eif_tx_done_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[43]">gtl_init_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[4a]">h4tl_init_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[4f]">h4tl_out_of_sync_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[4c]">h4tl_read_hdr_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[4e]">h4tl_read_next_out_of_sync_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[4d]">h4tl_read_payl_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[4b]">h4tl_read_start_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[51]">h4tl_rx_done_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[50]">h4tl_tx_done_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[2e]">handle_cb</a> from user_custs1_impl.o(.text) referenced from user_custs1_impl.o(.text)
 <LI><a href="#[6c]">hci_rd_local_supp_feats_cmd_handler_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[52]">ke_task_init_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[53]">ke_timer_init_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[70]">l2c_process_sdu_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[6f]">l2c_send_lecb_message_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[6d]">l2cc_pdu_pack_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[7c]">llc_le_length_conn_init_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[7f]">llc_pdu_send_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[7e]">lld_data_tx_check_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[7d]">lld_data_tx_prog_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[5b]">lld_sleep_compensate_func</a> from rwble.o(.text) referenced from jump_table.o(.constdata)
 <LI><a href="#[5c]">lld_sleep_init_func</a> from arch_system.o(.text) referenced from jump_table.o(.constdata)
 <LI><a href="#[5e]">lld_sleep_lpcycles_2_us_sel_func</a> from arch_system.o(.text) referenced from jump_table.o(.constdata)
 <LI><a href="#[5d]">lld_sleep_us_2_lpcycles_sel_func</a> from arch_system.o(.text) referenced from jump_table.o(.constdata)
 <LI><a href="#[60]">lld_test_mode_tx_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[5f]">lld_test_stop_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[c6]">llm_con_req_ind</a> from da14531_symbols.txt(ABSOLUTE) referenced from patch.o(.constdata)
 <LI><a href="#[79]">llm_create_p256_key_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[54]">llm_encryption_done_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[76]">llm_le_adv_report_ind_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[7a]">llm_p256_req_handler_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[78]">llm_p256_start_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[30]">lock</a> from user_custs1_impl.o(.text) referenced from user_custs1_impl.o(.text)
 <LI><a href="#[1e]">main</a> from arch_main.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[57]">nvds_del_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[55]">nvds_get_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[58]">nvds_init_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[56]">nvds_put_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[35]">param_update_request_timer_cb</a> from user_peripheral.o(.text) referenced from user_peripheral.o(.text)
 <LI><a href="#[5a]">platform_reset_func</a> from jump_table.o(.text) referenced from jump_table.o(.constdata)
 <LI><a href="#[65]">prf_add_profile_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[67]">prf_cleanup_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[66]">prf_create_func</a> from prf.o(.text) referenced from jump_table.o(.constdata)
 <LI><a href="#[68]">prf_get_id_from_task_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[69]">prf_get_task_from_id_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[64]">prf_init_func</a> from prf.o(.text) referenced from jump_table.o(.constdata)
 <LI><a href="#[29]">rf_force_agc_enable</a> from ble_arp.o(.text) referenced from ble_arp.o(.text)
 <LI><a href="#[3a]">rf_init_func</a> from ble_arp.o(.text) referenced from jump_table.o(.constdata)
 <LI><a href="#[23]">rf_reg_rd</a> from ble_arp.o(.text) referenced from ble_arp.o(.text)
 <LI><a href="#[24]">rf_reg_wr</a> from ble_arp.o(.text) referenced from ble_arp.o(.text)
 <LI><a href="#[3b]">rf_reinit_func</a> from ble_arp.o(.text) referenced from jump_table.o(.constdata)
 <LI><a href="#[27]">rf_reset</a> from ble_arp.o(.text) referenced from ble_arp.o(.text)
 <LI><a href="#[2a]">rf_rssi_convert</a> from ble_arp.o(.text) referenced from ble_arp.o(.text)
 <LI><a href="#[26]">rf_sleep</a> from ble_arp.o(.text) referenced from ble_arp.o(.text)
 <LI><a href="#[25]">rf_txpwr_dbm_get</a> from ble_arp.o(.text) referenced from ble_arp.o(.text)
 <LI><a href="#[7]">rwble_isr</a> from rwble.o(.text) referenced from startup_da14531.o(RESET)
 <LI><a href="#[59]">rwip_eif_get_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[2d]">send</a> from user_custs1_impl.o(.text) referenced from user_custs1_impl.o(.text)
 <LI><a href="#[62]">smpc_check_param_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[84]">smpc_dhkey_calc_ind_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[63]">smpc_pdu_recv_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[83]">smpc_public_key_exchange_start_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[c7]">smpc_recv_pair_rand_pdu</a> from da14531_symbols.txt(ABSOLUTE) referenced from patch.o(.constdata)
 <LI><a href="#[c8]">smpc_recv_public_key_exchange_pdu</a> from da14531_symbols.txt(ABSOLUTE) referenced from patch.o(.constdata)
 <LI><a href="#[85]">smpm_ecdh_key_create_func_empty</a> from jump_table.o(.text) referenced from jump_table.o(.constdata)
 <LI><a href="#[31]">stay</a> from user_custs1_impl.o(.text) referenced from user_custs1_impl.o(.text)
 <LI><a href="#[2f]">stop</a> from user_custs1_impl.o(.text) referenced from user_custs1_impl.o(.text)
 <LI><a href="#[a9]">suotar_gpio_map_ind_handler</a> from app_suotar_task.o(.text) referenced from app_suotar_task.o(.constdata)
 <LI><a href="#[ab]">suotar_patch_data_ind_handler</a> from app_suotar_task.o(.text) referenced from app_suotar_task.o(.constdata)
 <LI><a href="#[aa]">suotar_patch_len_ind_handler</a> from app_suotar_task.o(.text) referenced from app_suotar_task.o(.constdata)
 <LI><a href="#[a8]">suotar_patch_mem_dev_ind_handler</a> from app_suotar_task.o(.text) referenced from app_suotar_task.o(.constdata)
 <LI><a href="#[96]">suotar_prf_itf_get</a> from da14531_symbols.txt(ABSOLUTE) referenced from prf.o(.constdata)
 <LI><a href="#[2c]">timer_canceled_handler</a> from app_easy_timer.o(.text) referenced from app_easy_timer.o(.text)
 <LI><a href="#[2b]">timer_modified_handler</a> from app_easy_timer.o(.text) referenced from app_easy_timer.o(.text)
 <LI><a href="#[37]">uart_finish_transfers_adapt</a> from arch_console.o(.text) referenced from arch_console.o(.constdata)
 <LI><a href="#[3f]">uart_finish_transfers_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[3e]">uart_flow_off_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[3d]">uart_flow_on_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[3c]">uart_init_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[40]">uart_read_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[36]">uart_write_adapt</a> from arch_console.o(.text) referenced from arch_console.o(.constdata)
 <LI><a href="#[41]">uart_write_func</a> from da14531_symbols.txt(ABSOLUTE) referenced from jump_table.o(.constdata)
 <LI><a href="#[32]">unlock</a> from user_custs1_impl.o(.text) referenced from user_custs1_impl.o(.text)
 <LI><a href="#[af]">user_app_adv_undirect_complete</a> from user_peripheral.o(.text) referenced from app_entry_point.o(.constdata)
 <LI><a href="#[ac]">user_app_connection</a> from user_peripheral.o(.text) referenced from app_entry_point.o(.constdata)
 <LI><a href="#[ad]">user_app_disconnect</a> from user_peripheral.o(.text) referenced from app_entry_point.o(.constdata)
 <LI><a href="#[b0]">user_app_on_db_init_complete</a> from user_peripheral.o(.text) referenced from app_entry_point.o(.constdata)
 <LI><a href="#[bf]">user_catch_rest_hndl</a> from user_peripheral.o(.text) referenced from app_entry_point.o(.constdata)
 <LI><a href="#[33]">user_svc1_adc_val_1_cfg_ind_handler</a> from user_custs1_impl.o(.text) referenced from user_custs1_impl.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[59]"></a>rwip_eif_get_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[100]"></a>ble_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[16e]"></a>ble_regs_push</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;patched_ble_regs_push
</UL>

<P><STRONG><a name="[16f]"></a>ble_regs_pop</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;patched_ble_regs_pop
</UL>

<P><STRONG><a name="[16b]"></a>rf_reinit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[1eb]"></a>smpc_pdu_recv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JT_l2cc_pdu_recv_ind_handler_func
</UL>

<P><STRONG><a name="[8]"></a>UART_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[1be]"></a>platform_reset</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_suotar_read_mem
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_app_disconnect
</UL>

<P><STRONG><a name="[1b0]"></a>prf_get_task_from_id</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;suotar_send_mem_info_update_req
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;suotar_send_status_update_req
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_app_on_db_init_complete
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_to_app
</UL>

<P><STRONG><a name="[e3]"></a>dia_rand</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ba431_get_rand_func
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;default_app_generate_static_random_addr
</UL>

<P><STRONG><a name="[fe]"></a>dia_srand</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_rand_seed_from_trng
</UL>

<P><STRONG><a name="[205]"></a>co_buf_rx_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llc_data_ind_handler
</UL>

<P><STRONG><a name="[1ec]"></a>co_buf_rx_buffer_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llm_con_req_ind
</UL>

<P><STRONG><a name="[1f1]"></a>co_buf_tx_buffer_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llm_con_req_ind
</UL>

<P><STRONG><a name="[7c]"></a>llc_le_length_conn_init_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[1f2]"></a>llc_le_con_cmp_evt_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llm_con_req_ind
</UL>

<P><STRONG><a name="[1fa]"></a>llc_start</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llm_con_req_ind
</UL>

<P><STRONG><a name="[207]"></a>llc_common_enc_key_ref_comp_evt_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llc_data_ind_handler
</UL>

<P><STRONG><a name="[208]"></a>llc_common_enc_change_evt_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llc_data_ind_handler
</UL>

<P><STRONG><a name="[7f]"></a>llc_pdu_send_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[20b]"></a>llc_length_rsp_pdu_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llcp_length_req_handler
</UL>

<P><STRONG><a name="[20c]"></a>llc_length_ind</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llcp_length_rsp_handler
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llcp_length_req_handler
</UL>

<P><STRONG><a name="[20d]"></a>llc_lsto_timer_restart</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_lld_data_ind_handler
</UL>

<P><STRONG><a name="[20e]"></a>lld_data_ind_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_lld_data_ind_handler
</UL>

<P><STRONG><a name="[1ed]"></a>llc_util_get_free_conhdl</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llm_con_req_ind
</UL>

<P><STRONG><a name="[209]"></a>llc_util_dicon_procedure</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llcp_length_rsp_handler
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llcp_length_req_handler
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llc_data_ind_handler
</UL>

<P><STRONG><a name="[1fb]"></a>llc_util_update_channel_map</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llm_con_req_ind
</UL>

<P><STRONG><a name="[206]"></a>lld_get_mode</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llc_data_ind_handler
</UL>

<P><STRONG><a name="[1f9]"></a>lld_move_to_slave</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llm_con_req_ind
</UL>

<P><STRONG><a name="[169]"></a>lld_crypt_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[60]"></a>lld_test_mode_tx_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[5f]"></a>lld_test_stop_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[7e]"></a>lld_data_tx_check_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[7d]"></a>lld_data_tx_prog_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[1f3]"></a>lld_evt_elt_delete</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llm_con_req_ind
</UL>

<P><STRONG><a name="[1e8]"></a>lld_evt_elt_insert</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JT_lld_test_mode_rx_func
</UL>

<P><STRONG><a name="[1e6]"></a>lld_evt_adv_create</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JT_lld_test_mode_rx_func
</UL>

<P><STRONG><a name="[168]"></a>lld_evt_timer_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[165]"></a>lld_evt_end_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[163]"></a>lld_evt_rx_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[176]"></a>lld_sleep_enter</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[1e7]"></a>lld_util_freq2chnl</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JT_lld_test_mode_rx_func
</UL>

<P><STRONG><a name="[1fc]"></a>llm_wl_from_rl_restore</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llm_con_req_ind
</UL>

<P><STRONG><a name="[c6]"></a>llm_con_req_ind</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> patch.o(.constdata)
</UL>
<P><STRONG><a name="[76]"></a>llm_le_adv_report_ind_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[54]"></a>llm_encryption_done_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[78]"></a>llm_p256_start_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[79]"></a>llm_create_p256_key_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[1f5]"></a>llm_wlpub_addr_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llm_con_req_ind
</UL>

<P><STRONG><a name="[1f6]"></a>llm_wlpriv_addr_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llm_con_req_ind
</UL>

<P><STRONG><a name="[7a]"></a>llm_p256_req_handler_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[6c]"></a>hci_rd_local_supp_feats_cmd_handler_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[1f4]"></a>llm_util_bd_addr_in_wl</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llm_con_req_ind
</UL>

<P><STRONG><a name="[1f7]"></a>llm_util_bl_check</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llm_con_req_ind
</UL>

<P><STRONG><a name="[1f8]"></a>llm_util_bl_add</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llm_con_req_ind
</UL>

<P><STRONG><a name="[1ee]"></a>llm_util_rl_check</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llm_con_req_ind
</UL>

<P><STRONG><a name="[1ef]"></a>llm_util_rl_peer_find</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llm_con_req_ind
</UL>

<P><STRONG><a name="[1f0]"></a>llm_util_rl_peer_resolv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llm_con_req_ind
</UL>

<P><STRONG><a name="[77]"></a>PK_PointMult_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[162]"></a>ea_finetimer_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[167]"></a>ea_sw_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[d5]"></a>ea_sleep_check</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3c]"></a>uart_init_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[3d]"></a>uart_flow_on_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[3e]"></a>uart_flow_off_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[3f]"></a>uart_finish_transfers_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[40]"></a>uart_read_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[41]"></a>uart_write_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[42]"></a>UART_Handler_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[43]"></a>gtl_init_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[45]"></a>gtl_eif_read_start_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[46]"></a>gtl_eif_read_hdr_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[47]"></a>gtl_eif_read_payl_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[48]"></a>gtl_eif_tx_done_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[49]"></a>gtl_eif_rx_done_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[44]"></a>gtl_eif_init_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[20a]"></a>hci_send_2_host</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llc_data_ind_handler
</UL>

<P><STRONG><a name="[4b]"></a>h4tl_read_start_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[4c]"></a>h4tl_read_hdr_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[4d]"></a>h4tl_read_payl_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[4e]"></a>h4tl_read_next_out_of_sync_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[4f]"></a>h4tl_out_of_sync_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[50]"></a>h4tl_tx_done_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[51]"></a>h4tl_rx_done_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[4a]"></a>h4tl_init_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[74]"></a>attc_l2cc_pdu_recv_handler_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[191]"></a>attmdb_get_attribute</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
</UL>

<P><STRONG><a name="[192]"></a>attmdb_att_set_value</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
</UL>

<P><STRONG><a name="[18e]"></a>attmdb_att_get_permission</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
</UL>

<P><STRONG><a name="[73]"></a>atts_l2cc_pdu_recv_handler_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[1ff]"></a>smpc_generate_e1</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_smpc_recv_pair_rand_pdu
</UL>

<P><STRONG><a name="[201]"></a>smpc_pairing_end</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_smpc_recv_public_key_exchange_pdu
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_smpc_recv_pair_rand_pdu
</UL>

<P><STRONG><a name="[200]"></a>smpc_pdu_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_smpc_recv_public_key_exchange_pdu
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_smpc_recv_pair_rand_pdu
</UL>

<P><STRONG><a name="[63]"></a>smpc_pdu_recv_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[1fd]"></a>smpc_generate_f4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_smpc_recv_pair_rand_pdu
</UL>

<P><STRONG><a name="[202]"></a>smpc_generate_g2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_smpc_recv_pair_rand_pdu
</UL>

<P><STRONG><a name="[203]"></a>smpc_generate_f5</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_smpc_recv_pair_rand_pdu
</UL>

<P><STRONG><a name="[1fe]"></a>gapc_get_role</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_smpc_recv_public_key_exchange_pdu
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_smpc_recv_pair_rand_pdu
</UL>

<P><STRONG><a name="[1e9]"></a>gapc_lecnx_check_rx</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JT_l2cc_pdu_unpack_func
</UL>

<P><STRONG><a name="[1ea]"></a>l2cc_pdu_recv_ind_handler_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JT_l2cc_pdu_recv_ind_handler_func
</UL>

<P><STRONG><a name="[72]"></a>gapc_lecb_connect_cfm_handler_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[6d]"></a>l2cc_pdu_pack_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[70]"></a>l2c_process_sdu_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[6f]"></a>l2c_send_lecb_message_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[62]"></a>smpc_check_param_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[c7]"></a>smpc_recv_pair_rand_pdu</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> patch.o(.constdata)
</UL>
<P><STRONG><a name="[c8]"></a>smpc_recv_public_key_exchange_pdu</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> patch.o(.constdata)
</UL>
<P><STRONG><a name="[83]"></a>smpc_public_key_exchange_start_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[204]"></a>smpc_dhkey_calc_start</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_smpc_recv_public_key_exchange_pdu
</UL>

<P><STRONG><a name="[84]"></a>smpc_dhkey_calc_ind_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[172]"></a>ke_sleep_check</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[235]"></a>ke_event_flush</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[dd]"></a>ke_mem_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arch_resume_from_sleep
</UL>

<P><STRONG><a name="[e2]"></a>ke_mem_is_empty</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arch_turn_peripherals_off
</UL>

<P><STRONG><a name="[15c]"></a>ke_malloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_rand_seed_from_trng
</UL>

<P><STRONG><a name="[15e]"></a>ke_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_rand_seed_from_trng
</UL>

<P><STRONG><a name="[194]"></a>ke_msg_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_custs1_create_db
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cancel_timer_handler
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_timer
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;suotar_send_mem_info_update_req
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;suotar_send_status_update_req
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_req_ind_handler
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_catch_rest_hndl
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_app_on_db_init_complete
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dev_info_req_ind_handler
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_device_ready_ind_handler
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_suotar_create_db
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_easy_timer_cancel
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_diss_create_db
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_easy_gap_dev_config_create_msg
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_easy_gap_param_update_msg_create
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_easy_gap_undirected_advertise_start_create_msg
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_to_app
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_operation
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_part
</UL>

<P><STRONG><a name="[195]"></a>ke_msg_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_custs1_create_db
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cancel_timer_handler
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_timer
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;suotar_send_mem_info_update_req
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;suotar_send_status_update_req
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_req_ind_handler
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_catch_rest_hndl
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_app_on_db_init_complete
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dev_info_req_ind_handler
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_device_ready_ind_handler
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_suotar_create_db
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_easy_timer_cancel
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_diss_create_db
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_easy_gap_dev_configure
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_easy_gap_param_update_start
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_easy_gap_undirected_advertise_start
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_to_app
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_part
</UL>

<P><STRONG><a name="[22d]"></a>ke_msg_send_basic</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[1d1]"></a>ke_msg_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_send_cmp_evt
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_init
</UL>

<P><STRONG><a name="[52]"></a>ke_task_init_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[196]"></a>ke_task_create</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_init
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_init_func
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_init
</UL>

<P><STRONG><a name="[1a8]"></a>ke_state_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llcp_length_rsp_handler
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_easy_gap_undirected_advertise_start
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_use_enc_block_cmd_handler
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_send_cmp_evt
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_operation
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_init
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llm_con_req_ind
</UL>

<P><STRONG><a name="[1ab]"></a>ke_state_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JT_l2cc_pdu_recv_ind_handler_func
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llcp_length_rsp_handler
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llcp_length_req_handler
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llc_data_ind_handler
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_disconnect_ind_handler
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_device_ready_ind_handler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_svc1_adc_val_1_cfg_ind_handler
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_cmp_evt_handler
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_use_enc_block_cmd_handler
</UL>

<P><STRONG><a name="[198]"></a>ke_task_msg_flush</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_init_func
</UL>

<P><STRONG><a name="[53]"></a>ke_timer_init_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[1ca]"></a>ke_timer_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_timer
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_api_process_handler
</UL>

<P><STRONG><a name="[1cf]"></a>ke_timer_clear</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llcp_length_rsp_handler
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_easy_timer_cancel
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llm_con_req_ind
</UL>

<P><STRONG><a name="[173]"></a>ke_timer_sleep_check</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[d9]"></a>rwip_schedule</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_erase_flash_sectors
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_svc1_led_wr_ind_handler
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_enc_dec
</UL>

<P><STRONG><a name="[16a]"></a>rwip_wakeup</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[16c]"></a>rwip_wakeup_end</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[f0]"></a>rwip_wakeup_delay_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sleep_delay
</UL>

<P><STRONG><a name="[ed]"></a>__aeabi_uidivmod</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_correction_apply
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_sleep_us_2_lpcycles_rcx_func
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_sleep_compensate_func
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_rssi_convert
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_speed
</UL>

<P><STRONG><a name="[130]"></a>__aeabi_idivmod</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_correction_apply
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_get_temp
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_set_key
</UL>

<P><STRONG><a name="[175]"></a>__aeabi_lmul</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[e4]"></a>rand</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dia_rand_func
</UL>

<P><STRONG><a name="[e5]"></a>srand</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dia_srand_func
</UL>

<P><STRONG><a name="[105]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JT_l2cc_pdu_unpack_func
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_app_init
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otp_hdr_get_bd_address
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otp_cs_store
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arch_rom_init
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_init
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init_func
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;suotar_patch_data_ind_handler
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_req_ind_handler
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_app_on_db_init_complete
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dev_info_req_ind_handler
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;default_app_on_set_dev_info
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;default_app_on_get_dev_name
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_svc1_led_wr_ind_handler
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_to_app
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_set_key
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_enc_dec
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_smpc_recv_public_key_exchange_pdu
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llm_con_req_ind
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_smpc_recv_pair_rand_pdu
</UL>

<P><STRONG><a name="[108]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_init_arp_func
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arch_rom_init
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_auto_detect
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_svc1_led_wr_ind_handler
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;patch_func
</UL>

<P><STRONG><a name="[1c4]"></a>__aeabi_memset</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_read_image_headers
</UL>

<P><STRONG><a name="[1a7]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_easy_gap_dev_config_create_msg
</UL>

<P><STRONG><a name="[106]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arch_rom_init
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_svc1_led_wr_ind_handler
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_init
</UL>

<P><STRONG><a name="[1c2]"></a>memcmp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_read_image_headers
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_smpc_recv_public_key_exchange_pdu
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llm_con_req_ind
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_smpc_recv_pair_rand_pdu
</UL>

<P><STRONG><a name="[115]"></a>__aeabi_llsl</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPinStatus
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ConfigurePin
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetActive
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetInactive
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetPinFunction
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_init
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_suotar_spi_config
</UL>

<P><STRONG><a name="[10a]"></a>__ARM_common_switch8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otp_cs_store
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_enter_mode
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diss_value_req_ind_handler
</UL>

<P><STRONG><a name="[d7]"></a>arch_printf_process</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[55]"></a>nvds_get_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[58]"></a>nvds_init_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[57]"></a>nvds_del_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[56]"></a>nvds_put_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[15d]"></a>trng_acquire</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_rand_seed_from_trng
</UL>

<P><STRONG><a name="[65]"></a>prf_add_profile_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[67]"></a>prf_cleanup_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[18b]"></a>prf_env_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
</UL>

<P><STRONG><a name="[193]"></a>prf_dst_task_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
</UL>

<P><STRONG><a name="[68]"></a>prf_get_id_from_task_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[69]"></a>prf_get_task_from_id_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[197]"></a>prf_itf_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_init_func
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_create_func
</UL>

<P><STRONG><a name="[95]"></a>diss_prf_itf_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> prf.o(.constdata)
</UL>
<P><STRONG><a name="[96]"></a>suotar_prf_itf_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> prf.o(.constdata)
</UL>
<P><STRONG><a name="[18f]"></a>check_client_char_cfg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
</UL>

<P><STRONG><a name="[18d]"></a>get_value_handle</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
</UL>

<P><STRONG><a name="[18c]"></a>custs1_get_att_idx</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
</UL>

<P><STRONG><a name="[97]"></a>custs1_prf_itf_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> prf.o(.constdata)
</UL>
<P><STRONG><a name="[190]"></a>custs1_set_ccc_value</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
</UL>

<P><STRONG><a name="[8f]"></a>gattc_cmp_evt_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> custs1_task.o(.constdata)
</UL>
<P><STRONG><a name="[91]"></a>custs1_val_set_req_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> custs1_task.o(.constdata)
</UL>
<P><STRONG><a name="[90]"></a>custs1_val_ntf_req_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> custs1_task.o(.constdata)
</UL>
<P><STRONG><a name="[92]"></a>custs1_val_ind_req_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> custs1_task.o(.constdata)
</UL>
<P><STRONG><a name="[93]"></a>custs1_att_info_rsp_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> custs1_task.o(.constdata)
</UL>
<P><STRONG><a name="[8c]"></a>gattc_read_req_ind_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> custs1_task.o(.constdata)
</UL>
<P><STRONG><a name="[8e]"></a>gattc_att_info_req_ind_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> custs1_task.o(.constdata)
</UL>
<P><STRONG><a name="[94]"></a>custs1_value_req_rsp_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> custs1_task.o(.constdata)
</UL>
<P><STRONG><a name="[a2]"></a>gapm_adv_report_ind_handler_ROM</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[a0]"></a>gapc_set_dev_info_req_ind_handler_ROM</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[a1]"></a>gapm_profile_added_ind_handler_ROM</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[a3]"></a>gapc_param_update_req_ind_handler_ROM</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[a4]"></a>gapc_le_pkt_size_ind_handler_ROM</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[a5]"></a>gattc_svc_changed_cfg_ind_handler_ROM</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[a6]"></a>gapc_peer_features_ind_handler_ROM</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[1ad]"></a>app_std_process_event</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_custs1_process_handler
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_suotar_process_handler
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_diss_process_handler
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gap_process_handler
</UL>

<P><STRONG><a name="[231]"></a>app_get_address_type_ROM</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[22f]"></a>app_fill_random_byte_array_ROM</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[e9]"></a>__aeabi_uldivmod</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_rcx_freq
</UL>

<P><STRONG><a name="[1a0]"></a>app_db_init_start</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;default_app_on_set_dev_config_complete
</UL>

<P><STRONG><a name="[1ac]"></a>app_easy_gap_confirm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
</UL>

<P><STRONG><a name="[1a4]"></a>append_device_name</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_easy_gap_undirected_advertise_start_create_msg
</UL>

<P><STRONG><a name="[1e5]"></a>app_easy_gap_update_adv_data</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_update_timer_cb
</UL>

<P><STRONG><a name="[1bd]"></a>app_easy_gap_disconnect</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_suotar_read_mem
</UL>

<P><STRONG><a name="[1ae]"></a>get_user_prf_srv_perm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_custs1_create_db
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_suotar_create_db
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_diss_create_db
</UL>

<P><STRONG><a name="[19c]"></a>prf_init_srv_perm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14531_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;default_app_on_init
</UL>

<P><STRONG><a name="[20]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(.text)
</UL>
<P><STRONG><a name="[260]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[c9]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[20f]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[261]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[262]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[263]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[cb]"></a>__rt_lib_shutdown_fini</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry12b.o(.ARM.Collect$$$$0000000E))
<BR><BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_fini_ (Weak Reference)
</UL>

<P><STRONG><a name="[264]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[265]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$00000011))

<P><STRONG><a name="[1f]"></a>SystemInit</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, system_da14531.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemInit
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_DisableIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(.text)
</UL>
<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_da14531.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_da14531.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_da14531.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_da14531.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>BLE_RF_DIAG_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14531.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_RF_DIAG_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_RF_DIAG_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14531.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>KEYBRD_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14531.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>RESERVED21_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14531.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>RESERVED22_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14531.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>RESERVED23_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14531.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RFCAL_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14531.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>RTC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14531.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>SPI_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14531.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>SWTIM1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14531.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>SWTIM_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14531.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>XTAL32M_RDY_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14531.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>HardFault_HandlerC</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, hardfault_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HardFault_HandlerC
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscntl_dcdc_set_level
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(.text)
</UL>
<P><STRONG><a name="[21]"></a>NMI_HandlerC</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, nmi_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NMI_HandlerC
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscntl_dcdc_set_level
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(.text)
</UL>
<P><STRONG><a name="[1e]"></a>main</STRONG> (Thumb, 176 bytes, Stack size 8 bytes, arch_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = main &rArr; system_init &rArr; user_app_init &rArr; lock &rArr; gpadc_read &rArr; adc_offset_calibrate &rArr; adc_init &rArr; adc_configure
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_schedule
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_rcx_freq
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ea_sleep_check
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conditionally_run_radio_cals
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arch_printf_process
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_retention_mode
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arch_goto_sleep
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arch_resume_from_sleep
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[75]"></a>crypto_init_func</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, jump_table.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[82]"></a>ba431_get_rand_func</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, jump_table.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ba431_get_rand_func
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dia_rand
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[80]"></a>dia_rand_func</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, jump_table.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dia_rand_func
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[81]"></a>dia_srand_func</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, jump_table.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dia_srand_func
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[6a]"></a>dbg_init_func_empty</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, jump_table.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[6b]"></a>dbg_platform_reset_complete_func_empty</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, jump_table.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[85]"></a>smpm_ecdh_key_create_func_empty</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, jump_table.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[5a]"></a>platform_reset_func</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, jump_table.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[e8]"></a>arch_disable_sleep</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, arch_sleep.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arch_force_active_mode
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arch_set_sleep_mode
</UL>

<P><STRONG><a name="[e7]"></a>arch_set_extended_sleep</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, arch_sleep.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arch_restore_sleep_mode
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arch_set_sleep_mode
</UL>

<P><STRONG><a name="[e6]"></a>arch_set_sleep_mode</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, arch_sleep.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arch_set_extended_sleep
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arch_disable_sleep
</UL>
<BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;default_app_on_init
</UL>

<P><STRONG><a name="[dc]"></a>arch_get_sleep_mode</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, arch_sleep.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arch_resume_from_sleep
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arch_force_active_mode
</UL>

<P><STRONG><a name="[38]"></a>arch_restore_sleep_mode</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, arch_sleep.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arch_set_extended_sleep
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_console.o(.constdata)
</UL>
<P><STRONG><a name="[39]"></a>arch_force_active_mode</STRONG> (Thumb, 30 bytes, Stack size 4 bytes, arch_sleep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = arch_force_active_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arch_get_sleep_mode
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arch_disable_sleep
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_console.o(.constdata)
</UL>
<P><STRONG><a name="[171]"></a>arch_ble_ext_wakeup_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, arch_sleep.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[1cb]"></a>arch_ble_force_wakeup</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, arch_sleep.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_timer
</UL>

<P><STRONG><a name="[d4]"></a>read_rcx_freq</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, arch_system.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = read_rcx_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[102]"></a>calibrate_rcx20</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, arch_system.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[ff]"></a>init_pwr_and_clk_ble</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, arch_system.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = init_pwr_and_clk_ble
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[ea]"></a>lld_sleep_lpcycles_2_us_rcx_func</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, arch_system.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lld_sleep_lpcycles_2_us_rcx_func &rArr; __ARM_common_ll_muluu
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_ll_muluu
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_sleep_lpcycles_2_us_sel_func
</UL>

<P><STRONG><a name="[5e]"></a>lld_sleep_lpcycles_2_us_sel_func</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arch_system.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lld_sleep_lpcycles_2_us_sel_func &rArr; lld_sleep_lpcycles_2_us_rcx_func &rArr; __ARM_common_ll_muluu
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_sleep_lpcycles_2_us_rcx_func
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sleep_delay
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_sleep_compensate_func
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[ec]"></a>lld_sleep_us_2_lpcycles_rcx_func</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, arch_system.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lld_sleep_us_2_lpcycles_rcx_func
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_sleep_us_2_lpcycles_sel_func
</UL>

<P><STRONG><a name="[5d]"></a>lld_sleep_us_2_lpcycles_sel_func</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arch_system.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lld_sleep_us_2_lpcycles_sel_func &rArr; lld_sleep_us_2_lpcycles_rcx_func
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_sleep_us_2_lpcycles_rcx_func
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sleep_delay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[ee]"></a>set_sleep_delay</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, arch_system.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = set_sleep_delay &rArr; lld_sleep_lpcycles_2_us_sel_func &rArr; lld_sleep_lpcycles_2_us_rcx_func &rArr; __ARM_common_ll_muluu
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup_delay_set
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otp_cs_get_xtal_wait_trim
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_sleep_us_2_lpcycles_sel_func
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_sleep_lpcycles_2_us_sel_func
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_sleep_init_func
</UL>

<P><STRONG><a name="[d6]"></a>conditionally_run_radio_cals</STRONG> (Thumb, 134 bytes, Stack size 40 bytes, arch_system.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = conditionally_run_radio_cals &rArr; rf_recalibration &rArr; rf_calibration &rArr; kdtc_calibration &rArr; dis_hclk
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_recalibration
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_get_temp
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[177]"></a>app_use_lower_clocks_check</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, arch_system.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[5c]"></a>lld_sleep_init_func</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, arch_system.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = lld_sleep_init_func &rArr; set_sleep_delay &rArr; lld_sleep_lpcycles_2_us_sel_func &rArr; lld_sleep_lpcycles_2_us_rcx_func &rArr; __ARM_common_ll_muluu
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sleep_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[fb]"></a>set_xtal32m_trim_value</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, arch_system.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = set_xtal32m_trim_value
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[d3]"></a>system_init</STRONG> (Thumb, 598 bytes, Stack size 24 bytes, arch_system.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = system_init &rArr; user_app_init &rArr; lock &rArr; gpadc_read &rArr; adc_offset_calibrate &rArr; adc_init &rArr; adc_configure
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_app_init
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_rcx_freq
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;periph_init
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_init
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sb_read_otp_header (Weak Reference)
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_indication (Weak Reference)
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otp_hdr_get_bd_address
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otp_cs_store
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otp_cs_get_xtal32m_trim_value
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_rand_seed_from_trng
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_enter_mode
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_disable
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dia_srand
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_init
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arch_rom_init
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_init
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_init
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_xtal32m_trim_value
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_pwr_and_clk_ble
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calibrate_rcx20
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arch_disable_sleep
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_sleep_init_func
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[fd]"></a>arch_rom_init</STRONG> (Thumb, 212 bytes, Stack size 88 bytes, arch_rom.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = arch_rom_init
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;patch_global_vars_init
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[f9]"></a>otp_cs_store</STRONG> (Thumb, 524 bytes, Stack size 56 bytes, otp_cs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = otp_cs_store
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sb_set_debugger_mode (Weak Reference)
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_adc_offset
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_adc_ge
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[10d]"></a>otp_cs_load_pd_rad</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, otp_cs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = otp_cs_load_pd_rad
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_pa_pwr_get
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_reinit_func
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init_func
</UL>

<P><STRONG><a name="[10f]"></a>otp_cs_load_pd_adpll</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, otp_cs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = otp_cs_load_pd_adpll
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_pa_pwr_get
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_recalibration
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_reinit_func
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init_func
</UL>

<P><STRONG><a name="[133]"></a>otp_cs_get_adc_single_ge</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, otp_cs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_correction_apply
</UL>

<P><STRONG><a name="[134]"></a>otp_cs_get_adc_single_offset</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, otp_cs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_correction_apply
</UL>

<P><STRONG><a name="[135]"></a>otp_cs_get_adc_diff_ge</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, otp_cs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_correction_apply
</UL>

<P><STRONG><a name="[136]"></a>otp_cs_get_adc_diff_offset</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, otp_cs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_correction_apply
</UL>

<P><STRONG><a name="[128]"></a>otp_cs_get_adc_trim_val</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, otp_cs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
</UL>

<P><STRONG><a name="[131]"></a>otp_cs_get_adc_offsh_ge</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, otp_cs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_correction_apply
</UL>

<P><STRONG><a name="[132]"></a>otp_cs_get_adc_offsh_offset</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, otp_cs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_correction_apply
</UL>

<P><STRONG><a name="[126]"></a>otp_cs_get_adc_25_cal</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, otp_cs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_configure
</UL>

<P><STRONG><a name="[fa]"></a>otp_cs_get_xtal32m_trim_value</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, otp_cs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[ef]"></a>otp_cs_get_xtal_wait_trim</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, otp_cs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sleep_delay
</UL>

<P><STRONG><a name="[f8]"></a>otp_hdr_get_bd_address</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, otp_hdr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = otp_hdr_get_bd_address
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[161]"></a>syscntl_use_lowest_amba_clocks</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, syscntl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_WAKEUP_LP_Handler
</UL>

<P><STRONG><a name="[11e]"></a>syscntl_use_highest_amba_clocks</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, syscntl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WKUP_QUADEC_Handler
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_WAKEUP_LP_Handler
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_up
</UL>

<P><STRONG><a name="[174]"></a>syscntl_cfg_xtal32m_amp_reg</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, syscntl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_regs
</UL>

<P><STRONG><a name="[112]"></a>syscntl_dcdc_get_level</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, syscntl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_init
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscntl_dcdc_turn_on_in_boost
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dcdc_cfg
</UL>

<P><STRONG><a name="[ce]"></a>syscntl_dcdc_set_level</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, syscntl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arch_turn_peripherals_off
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_HandlerC
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_HandlerC
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_disable
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dcdc_cfg
</UL>

<P><STRONG><a name="[110]"></a>syscntl_dcdc_turn_on_in_boost</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, syscntl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = syscntl_dcdc_turn_on_in_boost
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_is_dcdc_reserved
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscntl_dcdc_get_level
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dcdc_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;periph_init
</UL>

<P><STRONG><a name="[f4]"></a>GPIO_init</STRONG> (Thumb, 166 bytes, Stack size 40 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GPIO_init &rArr; GPIO_reservations
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_reservations
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[116]"></a>GPIO_SetPinFunction</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_SetPinFunction
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ConfigurePin
</UL>

<P><STRONG><a name="[117]"></a>GPIO_SetInactive</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_SetInactive
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ConfigurePin
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_svc1_adc_val_1_cfg_ind_handler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unlock
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stay
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lock
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop
</UL>

<P><STRONG><a name="[118]"></a>GPIO_SetActive</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_SetActive
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ConfigurePin
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unlock
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lock
</UL>

<P><STRONG><a name="[119]"></a>GPIO_ConfigurePin</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GPIO_ConfigurePin &rArr; GPIO_SetPinFunction
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetActive
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetInactive
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetPinFunction
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_suotar_spi_config
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_pad_functions
</UL>

<P><STRONG><a name="[11a]"></a>GPIO_GetPinStatus</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_GetPinStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_svc1_led_wr_ind_handler
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send
</UL>

<P><STRONG><a name="[11b]"></a>GPIO_ResetIRQ</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_ResetIRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpioshift16
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOn_Handler
</UL>

<P><STRONG><a name="[11d]"></a>GPIOn_Handler</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIOn_Handler &rArr; GPIO_ResetIRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO4_Handler
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO3_Handler
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO2_Handler
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO1_Handler
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO0_Handler
</UL>

<P><STRONG><a name="[10]"></a>GPIO0_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO0_Handler &rArr; GPIOn_Handler &rArr; GPIO_ResetIRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOn_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>GPIO1_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO1_Handler &rArr; GPIOn_Handler &rArr; GPIO_ResetIRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOn_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>GPIO2_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO2_Handler &rArr; GPIOn_Handler &rArr; GPIO_ResetIRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOn_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>GPIO3_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO3_Handler &rArr; GPIOn_Handler &rArr; GPIO_ResetIRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOn_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>GPIO4_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO4_Handler &rArr; GPIOn_Handler &rArr; GPIO_ResetIRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOn_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>WKUP_QUADEC_Handler</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, wkupct_quadec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WKUP_QUADEC_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscntl_use_highest_amba_clocks
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[11f]"></a>wkupct_enable_irq</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, wkupct_quadec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = wkupct_enable_irq
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_button_enable
</UL>

<P><STRONG><a name="[1df]"></a>wkupct_register_callback</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wkupct_quadec.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_button_enable
</UL>

<P><STRONG><a name="[125]"></a>adc_temp_sensor_disable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, adc_531.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_configure
</UL>

<P><STRONG><a name="[127]"></a>adc_temp_sensor_enable</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, adc_531.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_configure
</UL>

<P><STRONG><a name="[124]"></a>adc_set_diff_input</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, adc_531.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_configure
</UL>

<P><STRONG><a name="[123]"></a>adc_set_se_input</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, adc_531.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_configure
</UL>

<P><STRONG><a name="[12a]"></a>adc_enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, adc_531.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
</UL>

<P><STRONG><a name="[f1]"></a>adc_init</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, adc_531.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = adc_init &rArr; adc_configure
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_enable
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_DisableIRQ
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_configure
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otp_cs_get_adc_trim_val
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conditionally_run_radio_cals
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_offset_calibrate
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpadc_read
</UL>

<P><STRONG><a name="[1e2]"></a>adc_disable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, adc_531.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpadc_read
</UL>

<P><STRONG><a name="[12c]"></a>adc_start</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, adc_531.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_get_sample
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_get_temp
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpadc_read
</UL>

<P><STRONG><a name="[12b]"></a>adc_get_sample</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, adc_531.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = adc_get_sample
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_start
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_offset_calibrate
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpadc_read
</UL>

<P><STRONG><a name="[12d]"></a>adc_offset_calibrate</STRONG> (Thumb, 276 bytes, Stack size 24 bytes, adc_531.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = adc_offset_calibrate &rArr; adc_init &rArr; adc_configure
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_get_sample
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpadc_read
</UL>

<P><STRONG><a name="[c]"></a>ADC_Handler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, adc_531.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[12e]"></a>adc_correct_sample</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, adc_531.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = adc_correct_sample &rArr; adc_correction_apply
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_correction_apply
</UL>
<BR>[Called By]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpadc_read
</UL>

<P><STRONG><a name="[f2]"></a>adc_get_temp</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, adc_531.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = adc_get_temp
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_start
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conditionally_run_radio_cals
</UL>

<P><STRONG><a name="[137]"></a>spi_set_speed</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, spi_531.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = spi_set_speed
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_initialize
</UL>

<P><STRONG><a name="[139]"></a>spi_enable</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, spi_531.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_initialize
</UL>

<P><STRONG><a name="[1b2]"></a>spi_disable</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, spi_531.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_suotar_stop
</UL>

<P><STRONG><a name="[13b]"></a>spi_set_cp_mode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, spi_531.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_initialize
</UL>

<P><STRONG><a name="[13a]"></a>spi_set_bitmode</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, spi_531.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = spi_set_bitmode
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_data
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_write_data
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_page_program
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_block_erase_no_wait
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_block_erase
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_power_down
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_jedec_id
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_release_from_power_down
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_status_reg
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_write_enable
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_initialize
</UL>

<P><STRONG><a name="[138]"></a>spi_initialize</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, spi_531.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = spi_initialize &rArr; spi_set_bitmode
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_bitmode
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_cp_mode
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_enable
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_speed
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;periph_init
</UL>

<P><STRONG><a name="[13d]"></a>spi_cs_low</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, spi_531.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_data
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_page_program
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_jedec_id
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_release_from_power_down
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_transaction
</UL>

<P><STRONG><a name="[13f]"></a>spi_cs_high</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, spi_531.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_data
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_page_program
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_jedec_id
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_release_from_power_down
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_transaction
</UL>

<P><STRONG><a name="[13e]"></a>spi_access</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, spi_531.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = spi_access
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_data
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_page_program
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_jedec_id
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_transaction
</UL>

<P><STRONG><a name="[13c]"></a>spi_transaction</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, spi_531.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = spi_transaction &rArr; spi_access
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_access
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_high
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_low
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_block_erase_no_wait
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_block_erase
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_power_down
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_release_from_power_down
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_status_reg
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_write_enable
</UL>

<P><STRONG><a name="[140]"></a>spi_flash_read_status_reg</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_access
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_transaction
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_bitmode
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_wait_till_ready
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_is_busy
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_write_enable
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_erase_flash_sectors
</UL>

<P><STRONG><a name="[141]"></a>spi_flash_is_busy</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = spi_flash_is_busy &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_access
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_status_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_data
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_page_program
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_block_erase_no_wait
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_block_erase
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_power_down
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_jedec_id
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_write_enable
</UL>

<P><STRONG><a name="[142]"></a>spi_flash_wait_till_ready</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = spi_flash_wait_till_ready &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_access
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_status_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_page_program
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_block_erase
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_write_enable
</UL>

<P><STRONG><a name="[146]"></a>spi_flash_configure_env</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, spi_flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;periph_init
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_auto_detect
</UL>

<P><STRONG><a name="[1b7]"></a>spi_flash_configure_memory_protection</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, spi_flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_spi_flash_init
</UL>

<P><STRONG><a name="[143]"></a>spi_flash_release_from_power_down</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = spi_flash_release_from_power_down &rArr; spi_transaction &rArr; spi_access
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_transaction
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_high
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_low
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_bitmode
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_suotar_status_change
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_spi_flash_init
</UL>

<P><STRONG><a name="[144]"></a>spi_flash_read_jedec_id</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = spi_flash_read_jedec_id &rArr; spi_flash_is_busy &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_access
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_is_busy
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_access
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_high
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_low
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_bitmode
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_auto_detect
</UL>

<P><STRONG><a name="[145]"></a>spi_flash_auto_detect</STRONG> (Thumb, 94 bytes, Stack size 152 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = spi_flash_auto_detect &rArr; spi_flash_read_jedec_id &rArr; spi_flash_is_busy &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_access
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_jedec_id
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_configure_env
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_suotar_status_change
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_spi_flash_init
</UL>

<P><STRONG><a name="[147]"></a>spi_flash_power_down</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = spi_flash_power_down &rArr; spi_flash_is_busy &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_access
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_is_busy
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_transaction
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_bitmode
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_suotar_status_change
</UL>

<P><STRONG><a name="[149]"></a>spi_flash_block_erase</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = spi_flash_block_erase &rArr; spi_flash_write_enable &rArr; spi_flash_wait_till_ready &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_access
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_wait_till_ready
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_is_busy
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_write_enable
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_transaction
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_bitmode
</UL>
<BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_erase_flash_sectors
</UL>

<P><STRONG><a name="[14a]"></a>spi_flash_block_erase_no_wait</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = spi_flash_block_erase_no_wait &rArr; spi_flash_write_enable &rArr; spi_flash_wait_till_ready &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_access
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_is_busy
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_write_enable
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_transaction
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_bitmode
</UL>
<BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_erase_flash_sectors
</UL>

<P><STRONG><a name="[14b]"></a>spi_flash_page_program</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = spi_flash_page_program &rArr; spi_flash_write_enable &rArr; spi_flash_wait_till_ready &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_access
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_wait_till_ready
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_is_busy
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_write_enable
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_access
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_high
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_low
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_bitmode
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_write_data
</UL>

<P><STRONG><a name="[14c]"></a>spi_flash_write_data</STRONG> (Thumb, 102 bytes, Stack size 48 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = spi_flash_write_data &rArr; spi_flash_page_program &rArr; spi_flash_write_enable &rArr; spi_flash_wait_till_ready &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_access
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_page_program
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_bitmode
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_flash_write_data
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_svc1_led_wr_ind_handler
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send
</UL>

<P><STRONG><a name="[14d]"></a>spi_flash_read_data</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = spi_flash_read_data &rArr; spi_flash_is_busy &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_access
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_is_busy
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_access
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_high
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_low
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_bitmode
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_read_ext_mem
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_svc1_led_wr_ind_handler
</UL>

<P><STRONG><a name="[a]"></a>I2C_Handler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[f6]"></a>hw_otpc_enter_mode</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, hw_otpc_531.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hw_otpc_enter_mode &rArr; dcdc_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dcdc_cfg
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[111]"></a>hw_otpc_is_dcdc_reserved</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hw_otpc_531.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscntl_dcdc_turn_on_in_boost
</UL>

<P><STRONG><a name="[e1]"></a>hw_otpc_clear_dcdc_reserved</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hw_otpc_531.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arch_turn_peripherals_off
</UL>

<P><STRONG><a name="[150]"></a>hw_otpc_set_speed</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, hw_otpc_531.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_init
</UL>

<P><STRONG><a name="[e0]"></a>hw_otpc_init</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, hw_otpc_531.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hw_otpc_init
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscntl_dcdc_get_level
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_set_speed
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arch_turn_peripherals_off
</UL>

<P><STRONG><a name="[fc]"></a>hw_otpc_disable</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, hw_otpc_531.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hw_otpc_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscntl_dcdc_set_level
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[9]"></a>UART2_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UART2_Handler &rArr; uart_intr_hndl &rArr; uart_tx_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_intr_hndl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[153]"></a>uart_enable</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_initialize
</UL>

<P><STRONG><a name="[154]"></a>uart_baudrate_setf</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uart_baudrate_setf
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_initialize
</UL>

<P><STRONG><a name="[cf]"></a>uart_register_tx_cb</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write_adapt
</UL>

<P><STRONG><a name="[152]"></a>uart_initialize</STRONG> (Thumb, 166 bytes, Stack size 20 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = uart_initialize &rArr; uart_baudrate_setf
</UL>
<BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_baudrate_setf
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;periph_init
</UL>

<P><STRONG><a name="[155]"></a>uart_write_byte</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write_buffer
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write_byte
</UL>

<P><STRONG><a name="[156]"></a>uart_write_buffer</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = uart_write_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send
</UL>

<P><STRONG><a name="[d0]"></a>uart_send</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = uart_send &rArr; uart_write_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write_buffer
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_DisableIRQ
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write_adapt
</UL>

<P><STRONG><a name="[d1]"></a>uart_wait_tx_finish</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_wait_tx_finish
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_wait_tx_finish
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_finish_transfers_adapt
</UL>

<P><STRONG><a name="[101]"></a>init_rand_seed_from_trng</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, trng.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = init_rand_seed_from_trng
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dia_srand
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trng_acquire
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[5b]"></a>lld_sleep_compensate_func</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, rwble.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = lld_sleep_compensate_func &rArr; lld_sleep_lpcycles_2_us_sel_func &rArr; lld_sleep_lpcycles_2_us_rcx_func &rArr; __ARM_common_ll_muluu
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_sleep_lpcycles_2_us_sel_func
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[15f]"></a>power_up</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, rwble.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = power_up &rArr; patched_ble_regs_pop
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscntl_use_highest_amba_clocks
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;patched_ble_regs_pop
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_WAKEUP_LP_Handler
</UL>

<P><STRONG><a name="[6]"></a>BLE_WAKEUP_LP_Handler</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, rwble.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = BLE_WAKEUP_LP_Handler &rArr; power_up &rArr; patched_ble_regs_pop
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscntl_use_highest_amba_clocks
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscntl_use_lowest_amba_clocks
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_up
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>rwble_isr</STRONG> (Thumb, 224 bytes, Stack size 24 bytes, rwble.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rwble_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_reinit
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calibrate_rcx20
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup_end
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_adplldig_deactivate
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_evt_timer_isr
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_evt_rx_isr
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_evt_end_isr
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_drop_packet_fix
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_crypt_isr
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ea_sw_isr
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ea_finetimer_isr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[16d]"></a>patched_ble_regs_push</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rwip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = patched_ble_regs_push
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_regs_push
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[160]"></a>patched_ble_regs_pop</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rwip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = patched_ble_regs_pop
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_regs_pop
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_up
</UL>

<P><STRONG><a name="[d8]"></a>rwip_sleep</STRONG> (Thumb, 378 bytes, Stack size 24 bytes, rwip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = rwip_sleep &rArr; set_sleep_delay &rArr; lld_sleep_lpcycles_2_us_sel_func &rArr; lld_sleep_lpcycles_2_us_rcx_func &rArr; __ARM_common_ll_muluu
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ea_sleep_check
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscntl_cfg_xtal32m_amp_reg
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscntl_use_highest_amba_clocks
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscntl_use_lowest_amba_clocks
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;patched_ble_regs_push
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_use_lower_clocks_check
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sleep_delay
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arch_ble_ext_wakeup_get
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_sleep_enter
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_sleep_check
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_sleep_check
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lmul
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_max_sleep_duration
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[23]"></a>rf_reg_rd</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ble_arp.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ble_arp.o(.text)
</UL>
<P><STRONG><a name="[24]"></a>rf_reg_wr</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ble_arp.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ble_arp.o(.text)
</UL>
<P><STRONG><a name="[3a]"></a>rf_init_func</STRONG> (Thumb, 158 bytes, Stack size 48 bytes, ble_arp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = rf_init_func &rArr; rf_calibration &rArr; kdtc_calibration &rArr; dis_hclk
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otp_cs_load_pd_adpll
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otp_cs_load_pd_rad
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_recommended_settings
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_power_up
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_pa_pwr_set
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_nfm_is_enabled
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_calibration
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_adplldig_activate
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_update_arp
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_radiopwrupdn_pref_setting
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_regs
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_adplldig_deactivate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[3b]"></a>rf_reinit_func</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, ble_arp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = rf_reinit_func &rArr; otp_cs_load_pd_adpll
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otp_cs_load_pd_adpll
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otp_cs_load_pd_rad
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_recommended_settings
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_pa_pwr_set
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_nfm_is_enabled
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_adplldig_activate
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_update_arp_adpll_div_val
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_radiopwrupdn_pref_setting
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_regs
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_adplldig_deactivate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[86]"></a>ble_init_arp_func</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, ble_arp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_init_arp_func
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[f3]"></a>rf_recalibration</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, ble_arp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = rf_recalibration &rArr; rf_calibration &rArr; kdtc_calibration &rArr; dis_hclk
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otp_cs_load_pd_adpll
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_recommended_settings
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_calibration
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_adplldig_activate
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_update_arp_adpll_calib_vals
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_radiopwrupdn_pref_setting
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_adplldig_deactivate
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conditionally_run_radio_cals
</UL>

<P><STRONG><a name="[17d]"></a>set_recommended_settings</STRONG> (Thumb, 410 bytes, Stack size 20 bytes, rf_531.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = set_recommended_settings
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_recalibration
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_reinit_func
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init_func
</UL>

<P><STRONG><a name="[187]"></a>dis_adpll</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, rf_531.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dis_adpll
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdtc_calibration
</UL>

<P><STRONG><a name="[18a]"></a>kdtc_cal_end</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, rf_531.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdtc_calibration
</UL>

<P><STRONG><a name="[189]"></a>dis_kdtc_cal</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rf_531.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdtc_calibration
</UL>

<P><STRONG><a name="[186]"></a>en_adpll_tx</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, rf_531.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = en_adpll_tx
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdtc_calibration
</UL>

<P><STRONG><a name="[185]"></a>dis_hclk</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, rf_531.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dis_hclk
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdtc_calibration
</UL>

<P><STRONG><a name="[188]"></a>en_kdtc_cal_mod0</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, rf_531.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdtc_calibration
</UL>

<P><STRONG><a name="[184]"></a>kdtc_cal_init</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, rf_531.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdtc_calibration
</UL>

<P><STRONG><a name="[183]"></a>kdtc_calibration</STRONG> (Thumb, 402 bytes, Stack size 24 bytes, rf_531.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = kdtc_calibration &rArr; dis_hclk
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdtc_cal_init
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;en_kdtc_cal_mod0
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_hclk
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;en_adpll_tx
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_kdtc_cal
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdtc_cal_end
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_adpll
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_calibration
</UL>

<P><STRONG><a name="[17f]"></a>rf_calibration</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rf_531.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = rf_calibration &rArr; kdtc_calibration &rArr; dis_hclk
</UL>
<BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kdtc_calibration
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_recalibration
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init_func
</UL>

<P><STRONG><a name="[179]"></a>rf_power_up</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rf_531.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init_func
</UL>

<P><STRONG><a name="[17c]"></a>rf_adplldig_activate</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, rf_531.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rf_adplldig_activate
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_recalibration
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_reinit_func
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init_func
</UL>

<P><STRONG><a name="[166]"></a>rf_adplldig_deactivate</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rf_531.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_recalibration
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_reinit_func
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init_func
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[17a]"></a>rf_pa_pwr_set</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rf_531.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_reinit_func
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init_func
</UL>

<P><STRONG><a name="[10e]"></a>rf_pa_pwr_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rf_531.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otp_cs_load_pd_adpll
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otp_cs_load_pd_rad
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_txpwr_dbm_get
</UL>

<P><STRONG><a name="[17b]"></a>rf_nfm_is_enabled</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rf_531.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_reinit_func
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init_func
</UL>

<P><STRONG><a name="[64]"></a>prf_init_func</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, prf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = prf_init_func
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_msg_flush
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_create
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[66]"></a>prf_create_func</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, prf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = prf_create_func
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[199]"></a>default_app_on_init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, app_default_handlers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = default_app_on_init
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arch_set_sleep_mode
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_init_srv_perm
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_suotar_init
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dis_init
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_app_init
</UL>

<P><STRONG><a name="[19d]"></a>default_app_on_connection</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, app_default_handlers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = default_app_on_connection &rArr; user_app_adv_start &rArr; app_easy_timer &rArr; create_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_app_adv_start
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_prf_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_app_connection
</UL>

<P><STRONG><a name="[ae]"></a>default_app_on_set_dev_config_complete</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, app_default_handlers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = default_app_on_set_dev_config_complete &rArr; user_app_adv_start &rArr; app_easy_timer &rArr; create_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_app_adv_start
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_db_init_start
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_entry_point.o(.constdata)
</UL>
<P><STRONG><a name="[1a1]"></a>default_app_on_db_init_complete</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, app_default_handlers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = default_app_on_db_init_complete &rArr; user_app_adv_start &rArr; app_easy_timer &rArr; create_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_app_adv_start
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_app_on_db_init_complete
</UL>

<P><STRONG><a name="[b1]"></a>default_app_on_get_dev_name</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app_default_handlers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = default_app_on_get_dev_name
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dev_info_req_ind_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_entry_point.o(.constdata)
</UL>
<P><STRONG><a name="[b2]"></a>default_app_on_get_dev_appearance</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_default_handlers.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dev_info_req_ind_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_entry_point.o(.constdata)
</UL>
<P><STRONG><a name="[b3]"></a>default_app_on_get_dev_slv_pref_params</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app_default_handlers.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dev_info_req_ind_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_entry_point.o(.constdata)
</UL>
<P><STRONG><a name="[b4]"></a>default_app_on_set_dev_info</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, app_default_handlers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = default_app_on_set_dev_info
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_entry_point.o(.constdata)
</UL>
<P><STRONG><a name="[b5]"></a>default_app_update_params_request</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_default_handlers.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> app_entry_point.o(.constdata)
</UL>
<P><STRONG><a name="[b6]"></a>default_app_generate_static_random_addr</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, app_default_handlers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = default_app_generate_static_random_addr
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dia_rand
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_entry_point.o(.constdata)
</UL>
<P><STRONG><a name="[be]"></a>app_db_init_next</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_db_init_next
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_task_in_user_app
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_entry_point.o(.constdata)
</UL>
<P><STRONG><a name="[19e]"></a>app_prf_enable</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_prf_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_task_in_user_app
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;default_app_on_connection
</UL>

<P><STRONG><a name="[103]"></a>app_init</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_init
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_create
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[1a9]"></a>app_easy_gap_undirected_advertise_start</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_easy_gap_undirected_advertise_start &rArr; app_easy_gap_undirected_advertise_start_create_msg
</UL>
<BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_easy_gap_undirected_advertise_start_create_msg
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
</UL>
<BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_app_adv_start
</UL>

<P><STRONG><a name="[1aa]"></a>app_easy_gap_param_update_start</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_easy_gap_param_update_start &rArr; app_easy_gap_param_update_msg_create
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_easy_gap_param_update_msg_create
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;param_update_request_timer_cb
</UL>

<P><STRONG><a name="[bd]"></a>app_easy_gap_dev_configure</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_easy_gap_dev_configure &rArr; app_easy_gap_dev_config_create_msg
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_easy_gap_dev_config_create_msg
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_entry_point.o(.constdata)
</UL>
<P><STRONG><a name="[b7]"></a>app_gap_process_handler</STRONG> (Thumb, 24 bytes, Stack size 32 bytes, app_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_gap_process_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_std_process_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_entry_point.o(.constdata)
</UL>
<P><STRONG><a name="[19a]"></a>app_dis_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_diss.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;default_app_on_init
</UL>

<P><STRONG><a name="[98]"></a>app_diss_create_db</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, app_diss.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_diss_create_db
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_user_prf_srv_perm
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(.constdata)
</UL>
<P><STRONG><a name="[ba]"></a>app_diss_process_handler</STRONG> (Thumb, 24 bytes, Stack size 32 bytes, app_diss_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_diss_process_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_std_process_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_entry_point.o(.constdata)
</UL>
<P><STRONG><a name="[19b]"></a>app_suotar_init</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, app_suotar.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;default_app_on_init
</UL>

<P><STRONG><a name="[1bc]"></a>app_suotar_reset</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_suotar.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_suotar_read_mem
</UL>

<P><STRONG><a name="[99]"></a>app_suotar_create_db</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, app_suotar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_suotar_create_db
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_user_prf_srv_perm
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(.constdata)
</UL>
<P><STRONG><a name="[1af]"></a>suotar_send_status_update_req</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, app_suotar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = suotar_send_status_update_req
</UL>
<BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;suotar_patch_len_ind_handler
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;suotar_gpio_map_ind_handler
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;suotar_patch_data_ind_handler
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_suotar_img_hdlr
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_suotar_read_mem
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_suotar_start
</UL>

<P><STRONG><a name="[1b1]"></a>app_suotar_stop</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, app_suotar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = app_suotar_stop &rArr; on_suotar_status_change &rArr; spi_flash_auto_detect &rArr; spi_flash_read_jedec_id &rArr; spi_flash_is_busy &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_access
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_disable
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_suotar_status_change
</UL>
<BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_suotar_read_mem
</UL>

<P><STRONG><a name="[1b5]"></a>app_flash_write_data</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, app_suotar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = app_flash_write_data &rArr; spi_flash_write_data &rArr; spi_flash_page_program &rArr; spi_flash_write_enable &rArr; spi_flash_wait_till_ready &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_access
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_write_data
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_erase_flash_sectors
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_suotar_img_hdlr
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_read_image_headers
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_set_image_valid_flag
</UL>

<P><STRONG><a name="[1b6]"></a>app_spi_flash_init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_suotar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = app_spi_flash_init &rArr; spi_flash_auto_detect &rArr; spi_flash_read_jedec_id &rArr; spi_flash_is_busy &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_access
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_auto_detect
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_release_from_power_down
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_configure_memory_protection
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_suotar_img_hdlr
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_set_image_valid_flag
</UL>

<P><STRONG><a name="[1b8]"></a>app_suotar_spi_config</STRONG> (Thumb, 356 bytes, Stack size 24 bytes, app_suotar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = app_suotar_spi_config &rArr; GPIO_ConfigurePin &rArr; GPIO_SetPinFunction
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ConfigurePin
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_suotar_img_hdlr
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_set_image_valid_flag
</UL>

<P><STRONG><a name="[1b9]"></a>app_set_image_valid_flag</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, app_suotar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = app_set_image_valid_flag &rArr; app_spi_flash_init &rArr; spi_flash_auto_detect &rArr; spi_flash_read_jedec_id &rArr; spi_flash_is_busy &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_access
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_suotar_spi_config
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_spi_flash_init
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_flash_write_data
</UL>
<BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_suotar_read_mem
</UL>

<P><STRONG><a name="[1ba]"></a>app_suotar_start</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, app_suotar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = app_suotar_start &rArr; on_suotar_status_change &rArr; spi_flash_auto_detect &rArr; spi_flash_read_jedec_id &rArr; spi_flash_is_busy &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_access
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_suotar_status_change
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;suotar_send_status_update_req
</UL>
<BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_suotar_read_mem
</UL>

<P><STRONG><a name="[1bb]"></a>app_suotar_read_mem</STRONG> (Thumb, 218 bytes, Stack size 16 bytes, app_suotar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = app_suotar_read_mem &rArr; app_set_image_valid_flag &rArr; app_spi_flash_init &rArr; spi_flash_auto_detect &rArr; spi_flash_read_jedec_id &rArr; spi_flash_is_busy &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_access
</UL>
<BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_reset
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_easy_gap_disconnect
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_suotar_start
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_set_image_valid_flag
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_suotar_stop
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;suotar_send_status_update_req
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_suotar_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;suotar_patch_mem_dev_ind_handler
</UL>

<P><STRONG><a name="[1bf]"></a>suotar_send_mem_info_update_req</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, app_suotar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = suotar_send_mem_info_update_req
</UL>
<BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;suotar_gpio_map_ind_handler
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;suotar_patch_mem_dev_ind_handler
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_suotar_img_hdlr
</UL>

<P><STRONG><a name="[1c5]"></a>app_get_image_id</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_suotar.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_read_image_headers
</UL>

<P><STRONG><a name="[1c3]"></a>app_find_old_img</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, app_suotar.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_read_image_headers
</UL>

<P><STRONG><a name="[1c0]"></a>app_read_ext_mem</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, app_suotar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = app_read_ext_mem &rArr; spi_flash_read_data &rArr; spi_flash_is_busy &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_access
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_data
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_read_image_headers
</UL>

<P><STRONG><a name="[1c1]"></a>app_read_image_headers</STRONG> (Thumb, 514 bytes, Stack size 120 bytes, app_suotar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = app_read_image_headers &rArr; app_flash_write_data &rArr; spi_flash_write_data &rArr; spi_flash_page_program &rArr; spi_flash_write_enable &rArr; spi_flash_wait_till_ready &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_access
</UL>
<BR>[Calls]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_read_ext_mem
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_find_old_img
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_get_image_id
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_flash_write_data
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_erase_flash_sectors
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_suotar_img_hdlr
</UL>

<P><STRONG><a name="[1c6]"></a>app_suotar_img_hdlr</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, app_suotar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = app_suotar_img_hdlr &rArr; app_read_image_headers &rArr; app_flash_write_data &rArr; spi_flash_write_data &rArr; spi_flash_page_program &rArr; spi_flash_write_enable &rArr; spi_flash_wait_till_ready &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_access
</UL>
<BR>[Calls]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_read_image_headers
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;suotar_send_mem_info_update_req
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_suotar_spi_config
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_spi_flash_init
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_flash_write_data
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;suotar_send_status_update_req
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;suotar_patch_data_ind_handler
</UL>

<P><STRONG><a name="[bb]"></a>app_suotar_process_handler</STRONG> (Thumb, 24 bytes, Stack size 32 bytes, app_suotar_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_suotar_process_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_std_process_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_entry_point.o(.constdata)
</UL>
<P><STRONG><a name="[1c9]"></a>app_check_BLE_active</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, app_msg_utils.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_timer
</UL>

<P><STRONG><a name="[b9]"></a>app_msg_utils_api_process_handler</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, app_easy_msg_utils.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_msg_utils_api_process_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_easy_msg_find_idx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_entry_point.o(.constdata)
</UL>
<P><STRONG><a name="[b8]"></a>app_timer_api_process_handler</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, app_easy_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_timer_api_process_handler &rArr; create_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cancel_timer_handler
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_entry_point.o(.constdata)
</UL>
<P><STRONG><a name="[1cd]"></a>app_easy_timer</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, app_easy_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_easy_timer &rArr; create_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_app_connection
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_app_adv_start
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_update_timer_cb
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_svc1_adc_val_1_cfg_ind_handler
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_svc1_led_wr_ind_handler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unlock
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stay
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lock
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_cb
</UL>

<P><STRONG><a name="[1ce]"></a>app_easy_timer_cancel</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, app_easy_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_easy_timer_cancel
</UL>
<BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_clear
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_app_disconnect
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_app_connection
</UL>

<P><STRONG><a name="[8b]"></a>custs_get_func_callbacks</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, app_customs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> custs1.o(.constdata)
</UL>
<P><STRONG><a name="[c2]"></a>app_custs1_create_db</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, app_customs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_custs1_create_db
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_user_prf_srv_perm
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_custs_config.o(.constdata)
</UL>
<P><STRONG><a name="[bc]"></a>app_custs1_process_handler</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, app_customs_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_custs1_process_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_std_process_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_entry_point.o(.constdata)
</UL>
<P><STRONG><a name="[1d0]"></a>aes_init</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, aes.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = aes_init
</UL>
<BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_create
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_free
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_svc1_led_wr_ind_handler
</UL>

<P><STRONG><a name="[1d4]"></a>aes_operation</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, aes.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = aes_operation &rArr; aes_part &rArr; aes_enc_dec &rArr; AES_decrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_set_key
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_part
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_svc1_led_wr_ind_handler
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_send_encrypt_req
</UL>

<P><STRONG><a name="[1d6]"></a>aes_send_cmp_evt</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, aes.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = aes_send_cmp_evt &rArr; aes_part &rArr; aes_enc_dec &rArr; AES_decrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_free
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_part
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_cmp_evt_handler
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_use_enc_block_cmd_handler
</UL>

<P><STRONG><a name="[1d7]"></a>aes_send_encrypt_req</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, aes.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = aes_send_encrypt_req &rArr; aes_operation &rArr; aes_part &rArr; aes_enc_dec &rArr; AES_decrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_operation
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_use_enc_block_cmd_handler
</UL>

<P><STRONG><a name="[1d5]"></a>aes_set_key</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, aes_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = aes_set_key &rArr; AES_set_key
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_set_key
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_convert_key
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_operation
</UL>

<P><STRONG><a name="[1d3]"></a>aes_enc_dec</STRONG> (Thumb, 216 bytes, Stack size 56 bytes, aes_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = aes_enc_dec &rArr; AES_decrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_schedule
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_decrypt
</UL>
<BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_part
</UL>

<P><STRONG><a name="[1d8]"></a>AES_set_key</STRONG> (Thumb, 266 bytes, Stack size 48 bytes, sw_aes.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = AES_set_key
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_set_key
</UL>

<P><STRONG><a name="[1d9]"></a>AES_convert_key</STRONG> (Thumb, 120 bytes, Stack size 20 bytes, sw_aes.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = AES_convert_key
</UL>
<BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_set_key
</UL>

<P><STRONG><a name="[1da]"></a>AES_decrypt</STRONG> (Thumb, 358 bytes, Stack size 104 bytes, sw_aes.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = AES_decrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_xtime
</UL>
<BR>[Called By]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_enc_dec
</UL>

<P><STRONG><a name="[114]"></a>GPIO_reservations</STRONG> (Thumb, 356 bytes, Stack size 16 bytes, user_periph_setup.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_reservations
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_init
</UL>

<P><STRONG><a name="[1dc]"></a>set_pad_functions</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, user_periph_setup.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = set_pad_functions &rArr; GPIO_ConfigurePin &rArr; GPIO_SetPinFunction
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ConfigurePin
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;periph_init
</UL>

<P><STRONG><a name="[de]"></a>periph_init</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, user_periph_setup.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = periph_init &rArr; set_pad_functions &rArr; GPIO_ConfigurePin &rArr; GPIO_SetPinFunction
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscntl_dcdc_turn_on_in_boost
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_initialize
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_configure_env
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_initialize
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;patch_func
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_pad_functions
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arch_resume_from_sleep
</UL>

<P><STRONG><a name="[2e]"></a>handle_cb</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, user_custs1_impl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = handle_cb &rArr; app_easy_timer &rArr; create_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_easy_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_custs1_impl.o(.text)
</UL>
<P><STRONG><a name="[1de]"></a>handle_button_enable</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, user_custs1_impl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = handle_button_enable &rArr; wkupct_enable_irq
</UL>
<BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wkupct_register_callback
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wkupct_enable_irq
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_app_init
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_to_app
</UL>

<P><STRONG><a name="[1e0]"></a>send_to_app</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, user_custs1_impl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = send_to_app &rArr; handle_button_enable &rArr; wkupct_enable_irq
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_button_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_svc1_led_wr_ind_handler
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send
</UL>

<P><STRONG><a name="[2d]"></a>send</STRONG> (Thumb, 608 bytes, Stack size 48 bytes, user_custs1_impl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = send &rArr; aes_operation &rArr; aes_part &rArr; aes_enc_dec &rArr; AES_decrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_schedule
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPinStatus
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_write_data
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_to_app
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_operation
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_svc1_led_wr_ind_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_custs1_impl.o(.text)
</UL>
<P><STRONG><a name="[2f]"></a>stop</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, user_custs1_impl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = stop &rArr; app_easy_timer &rArr; create_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetInactive
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_easy_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_custs1_impl.o(.text)
</UL>
<P><STRONG><a name="[1e3]"></a>gpadc_sample_to_mv</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, user_custs1_impl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_svc1_adc_val_1_cfg_ind_handler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lock
</UL>

<P><STRONG><a name="[1e1]"></a>gpadc_read</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, user_custs1_impl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gpadc_read &rArr; adc_offset_calibrate &rArr; adc_init &rArr; adc_configure
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_start
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_offset_calibrate
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_get_sample
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_disable
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_correct_sample
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_svc1_adc_val_1_cfg_ind_handler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lock
</UL>

<P><STRONG><a name="[30]"></a>lock</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, user_custs1_impl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lock &rArr; gpadc_read &rArr; adc_offset_calibrate &rArr; adc_init &rArr; adc_configure
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetActive
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetInactive
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_easy_timer
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpadc_read
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpadc_sample_to_mv
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_app_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_custs1_impl.o(.text)
</UL>
<P><STRONG><a name="[31]"></a>stay</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, user_custs1_impl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = stay &rArr; app_easy_timer &rArr; create_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetInactive
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_easy_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_custs1_impl.o(.text)
</UL>
<P><STRONG><a name="[32]"></a>unlock</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, user_custs1_impl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = unlock &rArr; app_easy_timer &rArr; create_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetActive
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetInactive
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_easy_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_custs1_impl.o(.text)
</UL>
<P><STRONG><a name="[1e4]"></a>user_svc1_led_wr_ind_handler</STRONG> (Thumb, 4184 bytes, Stack size 144 bytes, user_custs1_impl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = user_svc1_led_wr_ind_handler &rArr; send &rArr; aes_operation &rArr; aes_part &rArr; aes_enc_dec &rArr; AES_decrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_schedule
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPinStatus
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_data
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_write_data
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_easy_timer
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_to_app
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_operation
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_init
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_catch_rest_hndl
</UL>

<P><STRONG><a name="[33]"></a>user_svc1_adc_val_1_cfg_ind_handler</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, user_custs1_impl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = user_svc1_adc_val_1_cfg_ind_handler &rArr; gpadc_read &rArr; adc_offset_calibrate &rArr; adc_init &rArr; adc_configure
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetInactive
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_easy_timer
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpadc_read
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpadc_sample_to_mv
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_catch_rest_hndl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_custs1_impl.o(.text)
</UL>
<P><STRONG><a name="[b0]"></a>user_app_on_db_init_complete</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, user_peripheral.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = user_app_on_db_init_complete &rArr; default_app_on_db_init_complete &rArr; user_app_adv_start &rArr; app_easy_timer &rArr; create_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;default_app_on_db_init_complete
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_entry_point.o(.constdata)
</UL>
<P><STRONG><a name="[104]"></a>user_app_init</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, user_peripheral.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = user_app_init &rArr; lock &rArr; gpadc_read &rArr; adc_offset_calibrate &rArr; adc_init &rArr; adc_configure
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;default_app_on_init
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lock
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_button_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[19f]"></a>user_app_adv_start</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, user_peripheral.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = user_app_adv_start &rArr; app_easy_timer &rArr; create_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_easy_timer
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_easy_gap_undirected_advertise_start
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_app_disconnect
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_app_connection
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_app_adv_undirect_complete
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;default_app_on_db_init_complete
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;default_app_on_set_dev_config_complete
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;default_app_on_connection
</UL>

<P><STRONG><a name="[ac]"></a>user_app_connection</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, user_peripheral.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = user_app_connection &rArr; default_app_on_connection &rArr; user_app_adv_start &rArr; app_easy_timer &rArr; create_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_easy_timer_cancel
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_easy_timer
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_app_adv_start
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;default_app_on_connection
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_entry_point.o(.constdata)
</UL>
<P><STRONG><a name="[af]"></a>user_app_adv_undirect_complete</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, user_peripheral.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = user_app_adv_undirect_complete &rArr; user_app_adv_start &rArr; app_easy_timer &rArr; create_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_app_adv_start
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_entry_point.o(.constdata)
</UL>
<P><STRONG><a name="[ad]"></a>user_app_disconnect</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, user_peripheral.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = user_app_disconnect &rArr; user_app_adv_start &rArr; app_easy_timer &rArr; create_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_reset
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_easy_timer_cancel
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_app_adv_start
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_disconnect_ind_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_entry_point.o(.constdata)
</UL>
<P><STRONG><a name="[bf]"></a>user_catch_rest_hndl</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, user_peripheral.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = user_catch_rest_hndl &rArr; user_svc1_led_wr_ind_handler &rArr; send &rArr; aes_operation &rArr; aes_part &rArr; aes_enc_dec &rArr; AES_decrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_svc1_adc_val_1_cfg_ind_handler
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_svc1_led_wr_ind_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_cmp_evt_handler
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_entry_point.o(.constdata)
</UL>
<P><STRONG><a name="[1b3]"></a>on_suotar_status_change</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, user_peripheral.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = on_suotar_status_change &rArr; spi_flash_auto_detect &rArr; spi_flash_read_jedec_id &rArr; spi_flash_is_busy &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_access
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_power_down
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_auto_detect
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_release_from_power_down
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_suotar_start
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_suotar_stop
</UL>

<P><STRONG><a name="[61]"></a>JT_lld_test_mode_rx_func</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, patch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = JT_lld_test_mode_rx_func
</UL>
<BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_util_freq2chnl
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_evt_adv_create
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_evt_elt_insert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[6e]"></a>JT_l2cc_pdu_unpack_func</STRONG> (Thumb, 786 bytes, Stack size 80 bytes, patch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = JT_l2cc_pdu_unpack_func
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_lecnx_check_rx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[71]"></a>JT_l2cc_pdu_recv_ind_handler_func</STRONG> (Thumb, 72 bytes, Stack size 40 bytes, patch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = JT_l2cc_pdu_recv_ind_handler_func
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pdu_recv
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_recv_ind_handler_func
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[c3]"></a>PATCHED_llm_con_req_ind</STRONG> (Thumb, 816 bytes, Stack size 120 bytes, patch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = PATCHED_llm_con_req_ind
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_clear
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_wl_from_rl_restore
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_evt_elt_delete
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_move_to_slave
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_util_update_channel_map
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_util_get_free_conhdl
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_start
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_le_con_cmp_evt_send
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_buf_tx_buffer_get
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_buf_rx_buffer_get
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_wlpriv_addr_set
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_wlpub_addr_set
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_util_rl_peer_resolv
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_util_rl_peer_find
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_util_rl_check
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_util_bl_add
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_util_bl_check
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_util_bd_addr_in_wl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(.constdata)
</UL>
<P><STRONG><a name="[c5]"></a>PATCHED_smpc_recv_public_key_exchange_pdu</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, patch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = PATCHED_smpc_recv_public_key_exchange_pdu
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_dhkey_calc_start
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_role
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pdu_send
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_end
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(.constdata)
</UL>
<P><STRONG><a name="[87]"></a>PATCHED_llc_data_ind_handler</STRONG> (Thumb, 176 bytes, Stack size 40 bytes, patch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = PATCHED_llc_data_ind_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_get_mode
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_util_dicon_procedure
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_common_enc_change_evt_send
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_common_enc_key_ref_comp_evt_send
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_buf_rx_free
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_host
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_rom.o(.constdata)
</UL>
<P><STRONG><a name="[88]"></a>PATCHED_llcp_length_req_handler</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, patch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = PATCHED_llcp_length_req_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_util_dicon_procedure
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_length_ind
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_length_rsp_pdu_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_rom.o(.constdata)
</UL>
<P><STRONG><a name="[89]"></a>PATCHED_llcp_length_rsp_handler</STRONG> (Thumb, 134 bytes, Stack size 40 bytes, patch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = PATCHED_llcp_length_rsp_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_clear
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_util_dicon_procedure
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_length_ind
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_rom.o(.constdata)
</UL>
<P><STRONG><a name="[7b]"></a>JT_llc_le_length_effective_func</STRONG> (Thumb, 188 bytes, Stack size 20 bytes, patch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = JT_llc_le_length_effective_func
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table.o(.constdata)
</UL>
<P><STRONG><a name="[164]"></a>lld_drop_packet_fix</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, patch.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[8a]"></a>PATCHED_lld_data_ind_handler</STRONG> (Thumb, 58 bytes, Stack size 40 bytes, patch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = PATCHED_lld_data_ind_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_data_ind_handler
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_lsto_timer_restart
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_rom.o(.constdata)
</UL>
<P><STRONG><a name="[1dd]"></a>patch_func</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, patch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = patch_func
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;periph_init
</UL>

<P><STRONG><a name="[107]"></a>patch_global_vars_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, patch.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arch_rom_init
</UL>

<P><STRONG><a name="[ca]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[266]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[eb]"></a>__ARM_common_ll_muluu</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, arch_system.o(i.__ARM_common_ll_muluu))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __ARM_common_ll_muluu
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_sleep_lpcycles_2_us_rcx_func
</UL>

<P><STRONG><a name="[267]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[268]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[269]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[cd]"></a>__NVIC_DisableIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, system_da14531.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, startup_da14531.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, startup_da14531.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14531.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>uart_write_adapt</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, arch_console.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = uart_write_adapt &rArr; uart_send &rArr; uart_write_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_register_tx_cb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_console.o(.constdata)
</UL>
<P><STRONG><a name="[37]"></a>uart_finish_transfers_adapt</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, arch_console.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uart_finish_transfers_adapt
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_wait_tx_finish
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_console.o(.constdata)
</UL>
<P><STRONG><a name="[db]"></a>arch_resume_from_sleep</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, arch_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = arch_resume_from_sleep &rArr; periph_init &rArr; set_pad_functions &rArr; GPIO_ConfigurePin &rArr; GPIO_SetPinFunction
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;periph_init
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_mem_init
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arch_get_sleep_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[da]"></a>arch_goto_sleep</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, arch_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = arch_goto_sleep &rArr; arch_turn_peripherals_off &rArr; hw_otpc_init
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arch_turn_peripherals_off
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d2]"></a>init_retention_mode</STRONG> (Thumb, 114 bytes, Stack size 20 bytes, arch_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = init_retention_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[df]"></a>arch_turn_peripherals_off</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, arch_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = arch_turn_peripherals_off &rArr; hw_otpc_init
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_clear_dcdc_reserved
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_mem_is_empty
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_init
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscntl_dcdc_set_level
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arch_goto_sleep
</UL>

<P><STRONG><a name="[10b]"></a>calc_adc_ge</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, otp_cs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otp_cs_store
</UL>

<P><STRONG><a name="[10c]"></a>calc_adc_offset</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, otp_cs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otp_cs_store
</UL>

<P><STRONG><a name="[113]"></a>dcdc_cfg</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, syscntl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscntl_dcdc_turn_on_in_boost
</UL>

<P><STRONG><a name="[11c]"></a>gpioshift16</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetIRQ
</UL>

<P><STRONG><a name="[120]"></a>__NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, wkupct_quadec.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wkupct_enable_irq
</UL>

<P><STRONG><a name="[121]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, wkupct_quadec.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wkupct_enable_irq
</UL>

<P><STRONG><a name="[122]"></a>adc_configure</STRONG> (Thumb, 252 bytes, Stack size 24 bytes, adc_531.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = adc_configure
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_set_se_input
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_set_diff_input
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_temp_sensor_enable
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_temp_sensor_disable
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otp_cs_get_adc_25_cal
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
</UL>

<P><STRONG><a name="[129]"></a>__NVIC_DisableIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, adc_531.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
</UL>

<P><STRONG><a name="[12f]"></a>adc_correction_apply</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, adc_531.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = adc_correction_apply
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otp_cs_get_adc_offsh_offset
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otp_cs_get_adc_offsh_ge
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otp_cs_get_adc_diff_offset
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otp_cs_get_adc_diff_ge
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otp_cs_get_adc_single_offset
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otp_cs_get_adc_single_ge
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_correct_sample
</UL>

<P><STRONG><a name="[148]"></a>spi_flash_write_enable</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = spi_flash_write_enable &rArr; spi_flash_wait_till_ready &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_access
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_wait_till_ready
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_is_busy
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_status_reg
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_transaction
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_bitmode
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_page_program
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_block_erase_no_wait
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_block_erase
</UL>

<P><STRONG><a name="[14e]"></a>__NVIC_ClearPendingIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Handler
</UL>

<P><STRONG><a name="[14f]"></a>dcdc_cfg</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, hw_otpc_531.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dcdc_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscntl_dcdc_set_level
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscntl_dcdc_get_level
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_enter_mode
</UL>

<P><STRONG><a name="[158]"></a>__NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send
</UL>

<P><STRONG><a name="[15a]"></a>uart_rx_isr</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uart_rx_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_intr_hndl
</UL>

<P><STRONG><a name="[159]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send
</UL>

<P><STRONG><a name="[157]"></a>__NVIC_DisableIRQ</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send
</UL>

<P><STRONG><a name="[151]"></a>uart_intr_hndl</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = uart_intr_hndl &rArr; uart_tx_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_tx_isr
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_Handler
</UL>

<P><STRONG><a name="[15b]"></a>uart_tx_isr</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uart_tx_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_intr_hndl
</UL>

<P><STRONG><a name="[170]"></a>get_max_sleep_duration</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[27]"></a>rf_reset</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ble_arp.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ble_arp.o(.text)
</UL>
<P><STRONG><a name="[2a]"></a>rf_rssi_convert</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, ble_arp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rf_rssi_convert
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_arp.o(.text)
</UL>
<P><STRONG><a name="[28]"></a>RADIOCNTL_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ble_arp.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ble_arp.o(.text)
</UL>
<P><STRONG><a name="[29]"></a>rf_force_agc_enable</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ble_arp.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ble_arp.o(.text)
</UL>
<P><STRONG><a name="[25]"></a>rf_txpwr_dbm_get</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, ble_arp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rf_txpwr_dbm_get
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_pa_pwr_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_arp.o(.text)
</UL>
<P><STRONG><a name="[26]"></a>rf_sleep</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ble_arp.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ble_arp.o(.text)
</UL>
<P><STRONG><a name="[178]"></a>rf_regs</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, ble_arp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rf_regs
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscntl_cfg_xtal32m_amp_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_reinit_func
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init_func
</UL>

<P><STRONG><a name="[17e]"></a>update_radiopwrupdn_pref_setting</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, ble_arp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = update_radiopwrupdn_pref_setting
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_recalibration
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_reinit_func
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init_func
</UL>

<P><STRONG><a name="[181]"></a>ble_update_arp_adpll_div_val</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, ble_arp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_reinit_func
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_update_arp
</UL>

<P><STRONG><a name="[182]"></a>ble_update_arp_adpll_calib_vals</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, ble_arp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_recalibration
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_update_arp
</UL>

<P><STRONG><a name="[180]"></a>ble_update_arp</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, ble_arp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_update_arp
</UL>
<BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_update_arp_adpll_calib_vals
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_update_arp_adpll_div_val
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init_func
</UL>

<P><STRONG><a name="[8d]"></a>gattc_write_req_ind_handler</STRONG> (Thumb, 288 bytes, Stack size 56 bytes, custs1_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gattc_write_req_ind_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_value_handle
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;custs1_set_ccc_value
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;custs1_get_att_idx
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_client_char_cfg
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_get_attribute
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_att_set_value
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_att_get_permission
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;custs_get_func_callbacks
</UL>
<BR>[Address Reference Count : 1]<UL><LI> custs1_task.o(.constdata)
</UL>
<P><STRONG><a name="[1a2]"></a>app_task_in_user_app</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, app.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_db_init_next
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_prf_enable
</UL>

<P><STRONG><a name="[1a3]"></a>app_easy_gap_undirected_advertise_start_create_msg</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_easy_gap_undirected_advertise_start_create_msg
</UL>
<BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;append_device_name
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_easy_gap_undirected_advertise_start
</UL>

<P><STRONG><a name="[1a5]"></a>app_easy_gap_param_update_msg_create</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_easy_gap_param_update_msg_create
</UL>
<BR>[Calls]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_easy_gap_param_update_start
</UL>

<P><STRONG><a name="[1a6]"></a>app_easy_gap_dev_config_create_msg</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_easy_gap_dev_config_create_msg
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_easy_gap_dev_configure
</UL>

<P><STRONG><a name="[9a]"></a>gapm_device_ready_ind_handler</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, app_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gapm_device_ready_ind_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[9b]"></a>gapm_cmp_evt_handler</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, app_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = gapm_cmp_evt_handler &rArr; user_catch_rest_hndl &rArr; user_svc1_led_wr_ind_handler &rArr; send &rArr; aes_operation &rArr; aes_part &rArr; aes_enc_dec &rArr; AES_decrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_catch_rest_hndl
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_app_adv_undirect_complete
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_easy_gap_dev_configure
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;default_app_on_set_dev_config_complete
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[9d]"></a>gapc_connection_req_ind_handler</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, app_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gapc_connection_req_ind_handler &rArr; user_app_connection &rArr; default_app_on_connection &rArr; user_app_adv_start &rArr; app_easy_timer &rArr; create_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_app_connection
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_easy_gap_confirm
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[9c]"></a>gapc_cmp_evt_handler</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, app_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = gapc_cmp_evt_handler &rArr; user_catch_rest_hndl &rArr; user_svc1_led_wr_ind_handler &rArr; send &rArr; aes_operation &rArr; aes_part &rArr; aes_enc_dec &rArr; AES_decrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_catch_rest_hndl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[9e]"></a>gapc_disconnect_ind_handler</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, app_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gapc_disconnect_ind_handler &rArr; user_app_disconnect &rArr; user_app_adv_start &rArr; app_easy_timer &rArr; create_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_app_disconnect
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[9f]"></a>gapc_get_dev_info_req_ind_handler</STRONG> (Thumb, 162 bytes, Stack size 56 bytes, app_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gapc_get_dev_info_req_ind_handler &rArr; default_app_on_get_dev_name
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;default_app_on_get_dev_slv_pref_params
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;default_app_on_get_dev_appearance
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;default_app_on_get_dev_name
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[a7]"></a>diss_value_req_ind_handler</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, app_diss_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = diss_value_req_ind_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_diss_task.o(.constdata)
</UL>
<P><STRONG><a name="[1b4]"></a>app_erase_flash_sectors</STRONG> (Thumb, 136 bytes, Stack size 40 bytes, app_suotar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = app_erase_flash_sectors &rArr; spi_flash_block_erase_no_wait &rArr; spi_flash_write_enable &rArr; spi_flash_wait_till_ready &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_access
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_schedule
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_block_erase_no_wait
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_block_erase
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_status_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_read_image_headers
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_flash_write_data
</UL>

<P><STRONG><a name="[ab]"></a>suotar_patch_data_ind_handler</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, app_suotar_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = suotar_patch_data_ind_handler &rArr; app_suotar_img_hdlr &rArr; app_read_image_headers &rArr; app_flash_write_data &rArr; spi_flash_write_data &rArr; spi_flash_page_program &rArr; spi_flash_write_enable &rArr; spi_flash_wait_till_ready &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_access
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_suotar_img_hdlr
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;suotar_send_status_update_req
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_suotar_task.o(.constdata)
</UL>
<P><STRONG><a name="[a8]"></a>suotar_patch_mem_dev_ind_handler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, app_suotar_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = suotar_patch_mem_dev_ind_handler &rArr; app_suotar_read_mem &rArr; app_set_image_valid_flag &rArr; app_spi_flash_init &rArr; spi_flash_auto_detect &rArr; spi_flash_read_jedec_id &rArr; spi_flash_is_busy &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_access
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;suotar_send_mem_info_update_req
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_suotar_read_mem
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_suotar_task.o(.constdata)
</UL>
<P><STRONG><a name="[a9]"></a>suotar_gpio_map_ind_handler</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, app_suotar_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = suotar_gpio_map_ind_handler &rArr; suotar_send_mem_info_update_req
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;suotar_send_mem_info_update_req
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;suotar_send_status_update_req
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_suotar_task.o(.constdata)
</UL>
<P><STRONG><a name="[aa]"></a>suotar_patch_len_ind_handler</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, app_suotar_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = suotar_patch_len_ind_handler &rArr; suotar_send_status_update_req
</UL>
<BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;suotar_send_status_update_req
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_suotar_task.o(.constdata)
</UL>
<P><STRONG><a name="[1c7]"></a>app_easy_msg_find_idx</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app_easy_msg_utils.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_msg_utils_api_process_handler
</UL>

<P><STRONG><a name="[1c8]"></a>create_timer</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, app_easy_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = create_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arch_ble_force_wakeup
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_check_BLE_active
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_api_process_handler
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_easy_timer
</UL>

<P><STRONG><a name="[2c]"></a>timer_canceled_handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_easy_timer.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> app_easy_timer.o(.text)
</UL>
<P><STRONG><a name="[2b]"></a>timer_modified_handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_easy_timer.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> app_easy_timer.o(.text)
</UL>
<P><STRONG><a name="[1cc]"></a>cancel_timer_handler</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, app_easy_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = cancel_timer_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_api_process_handler
</UL>

<P><STRONG><a name="[1d2]"></a>aes_part</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, aes.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = aes_part &rArr; aes_enc_dec &rArr; AES_decrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_enc_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_send_cmp_evt
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_operation
</UL>

<P><STRONG><a name="[c0]"></a>aes_use_enc_block_cmd_handler</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, aes_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = aes_use_enc_block_cmd_handler &rArr; aes_send_encrypt_req &rArr; aes_operation &rArr; aes_part &rArr; aes_enc_dec &rArr; AES_decrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_send_encrypt_req
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_send_cmp_evt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> aes_task.o(.constdata)
</UL>
<P><STRONG><a name="[c1]"></a>aes_cmp_evt_handler</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, aes_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = aes_cmp_evt_handler &rArr; aes_send_cmp_evt &rArr; aes_part &rArr; aes_enc_dec &rArr; AES_decrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_send_cmp_evt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> aes_task.o(.constdata)
</UL>
<P><STRONG><a name="[1db]"></a>AES_xtime</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, sw_aes.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_decrypt
</UL>

<P><STRONG><a name="[34]"></a>adv_data_update_timer_cb</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, user_peripheral.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = adv_data_update_timer_cb &rArr; app_easy_timer &rArr; create_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_easy_timer
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_easy_gap_update_adv_data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_peripheral.o(.text)
</UL>
<P><STRONG><a name="[35]"></a>param_update_request_timer_cb</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, user_peripheral.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = param_update_request_timer_cb &rArr; app_easy_gap_param_update_start &rArr; app_easy_gap_param_update_msg_create
</UL>
<BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_easy_gap_param_update_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_peripheral.o(.text)
</UL>
<P><STRONG><a name="[c4]"></a>PATCHED_smpc_recv_pair_rand_pdu</STRONG> (Thumb, 272 bytes, Stack size 24 bytes, patch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = PATCHED_smpc_recv_pair_rand_pdu
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_role
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_generate_f5
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_generate_g2
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_generate_f4
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pdu_send
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_end
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_generate_e1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(.constdata)
</UL><P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[cc]"></a>__arm_fini_</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown_fini
</UL>

<P><STRONG><a name="[f5]"></a>reset_indication</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[f7]"></a>sb_read_otp_header</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[109]"></a>sb_set_debugger_mode</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otp_cs_store
</UL>
<HR></body></html>
